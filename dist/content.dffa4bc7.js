(()=>{var e,t="",n=!1,l=null,o=[];function s(){n&&(document.getElementsByClassName("modalWrapper")[0].remove(),n=!1)}function a(n){let a=document.getElementById("modalInput");n&&console.log("regen input",(a=document.getElementById("question")).value);let i=a;if(e){l=function(){let e=Array.from(document.getElementsByClassName("cm-content")[0].childNodes),n=e.flatMap((e,n)=>{if("cm-line"!=e.className)return null;let l=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return l.length>0&&(t.includes(l)||l.includes(t))?n:null}).filter(e=>e).pop();return e[n]}();let e=document.createElement("div");e.className="cm-line",e.innerHTML="% Begin AI Generated Content:",l.insertAdjacentElement("afterend",e),l=e;let n=document.createElement("div");n.className="cm-line",l.insertAdjacentElement("afterend",n),l=n,o=[n]}else{document.getElementById("actions").style.display="flex";let e=document.getElementById("question");e.style.display="flex",e.textContent=i.value,e.value=i.value,document.getElementById("modalWrapper").style.height="85px"}chrome.runtime.sendMessage({input:i.value,selection:t,source:"modal"}),e&&s()}function i(e){console.log("in save feedback")}chrome.storage.sync.get({inlineMode:!1},t=>{console.log("Inline mode set to",e=t.inlineMode)}),document.addEventListener("keydown",function(e){let t=e.key;if("Escape"===t&&s(),n){let e=document.getElementById("modalInput");"Enter"==t&&e===document.activeElement&&a(!1)}}),chrome.runtime.onMessage.addListener((d,c,r)=>(d.showModal&&(console.log("Showing model"),function(){var e,l,o,d,c;s();let r=window.getSelection();"Range"==r.type?(e=r.getRangeAt(0).getBoundingClientRect(),console.log("Selected text:",t=window.getSelection().toString())):(e=document.getElementsByClassName("cm-activeLine")[0].getBoundingClientRect(),console.log("No text selection"),console.log(window.getSelection())),console.log("bounds",e);let m=document.getElementsByClassName("cm-content")[0],p=(l=e,(o=document.createElement("div")).className="modalWrapper",o.id="modalWrapper",o.style.top=l.bottom+5+"px",o.style.left=l.left+15+"px",o.style.width=m.offsetWidth-30+"px",o.style.height="45px",o.style.display="flex",o.style.position="absolute",o.style.flexDirection="column",o);document.body.appendChild(p);let g=((d=document.createElement("div")).className="question",d.id="question",d.placeholder="this is the question",d.style.width=m.offsetWidth-30+"px",d.style.height="30px",d.style.display="none",d.textContent="",d.style.padding="5px",d);p.appendChild(g);let u=((c=document.createElement("div")).className="answer",c.id="answer",c.style.width=m.offsetWidth-30+"px",c);p.appendChild(u);let y=function(e,n){var l,o,s=document.createElement("div");s.className="actions",s.id="actions",s.style.width=e.offsetWidth-30+"px",s.style.height="20px",s.style.display="none",s.style.flexDirection="row-reverse";var d=document.createElement("button");d.textContent="replace",d.style.fontSize="10px",d.style.backgroundColor="transparent",d.style.border="none",d.style.marginRight="10px",d.style.color="rgba(255, 255, 255, 0.6)",d.addEventListener("click",()=>{(function(e){let n=Array.from(document.getElementsByClassName("cm-line")).filter(e=>{let n=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return!!(n.length>0&&t.includes(n))});console.log("replacing",n),n.length>0&&(n[0].innerHTML=e,n.length>1&&n.slice(1).forEach(e=>{e.remove()}))})(document.getElementById("answer").innerHTML)}),s.appendChild(d);let[c,r]=((l=document.createElement("button")).textContent="Good Answer",l.style.fontSize="10px",l.style.backgroundColor="transparent",l.style.border="none",l.style.marginRight="5px",l.style.color="rgba(255, 255, 255, 0.6)",l.addEventListener("click",()=>{console.log("Saving as good answer"),i(!0)}),(o=document.createElement("button")).textContent="Bad Answer",o.style.fontSize="10px",o.style.backgroundColor="transparent",o.style.border="none",o.style.marginRight="5px",o.style.color="rgba(255, 255, 255, 0.6)",o.addEventListener("click",()=>{console.log("Saving as bad answer"),i(!1)}),[l,o]);s.appendChild(c),s.appendChild(r);var m=document.createElement("button");return m.textContent="Regenerate",m.style.fontSize="10px",m.style.backgroundColor="transparent",m.style.border="none",m.style.marginRight="5px",m.style.color="rgba(255, 255, 255, 0.6)",m.addEventListener("click",()=>{a(!0)}),s.appendChild(m),s}(m,0);p.appendChild(y);let h=function(e,t,n){var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative";var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative",t.appendChild(l);let o=document.createElement("div");o.style.width="32px",o.style.height="32px",o.style.display="flex",o.style.alignItems="center",o.style.justifyContent="center",o.style.marginLeft="3px";let s=document.createElement("img");s.style.height="20px",s.style.width="20px",s.src=chrome.runtime.getURL("icons/wand-64.png"),o.appendChild(s);let a=document.createElement("div");a.style.flexGrow=1,a.style.height="32px",a.display="flex",a.alignItems="center";let i=document.createElement("input");return i.type="search",i.placeholder="How can I help?",i.className="modalInput",i.id="modalInput",a.appendChild(i),l.appendChild(o),l.appendChild(a),l}(m,p,15);p.appendChild(h),document.getElementById("modalInput").focus(),n=!0}()),d.incomingMessage&&console.log("INCOMING MESSAGE"),d.message&&(console.log("content got message",d.message),function(t){if(e){if(t.split(/\r?\n/).length>o.length){let e=document.createElement("div");e.className="cm-line",l.insertAdjacentElement("afterend",e),l=e,o.push(e),l.scrollIntoView()}t.split(/\r?\n/).forEach(function(e,t){o[t].innerHTML=e})}else{let e=document.getElementById("answer");e.textContent=t,e.style.padding="5px",e.style.height="auto",e.scrollTop=e.scrollHeight,e.parentNode.style.height="auto",document.getElementById("modalInput").value=""}}(d.message)),!0))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
