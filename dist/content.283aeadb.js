(()=>{var e,t=globalThis,n={},l={},o=t.parcelRequirea8ca;null==o&&((o=function(e){if(e in n)return n[e].exports;if(e in l){var t=l[e];delete l[e];var o={id:e,exports:{}};return n[e]=o,t.call(o.exports,o,o.exports),o.exports}var s=Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,t){l[e]=t},t.parcelRequirea8ca=o),(0,o.register)("gXZrF",function(e,t){});var s="",a=!1,i=null,d=[];function r(){a&&(document.getElementsByClassName("modalWrapper")[0].remove(),a=!1)}function c(t){let n=document.getElementById("modalInput");t&&console.log("regen input",(n=document.getElementById("question")).value);let l=n;if(e){i=function(){let e=Array.from(document.getElementsByClassName("cm-content")[0].childNodes),t=e.flatMap((e,t)=>{if("cm-line"!=e.className)return null;let n=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return n.length>0&&(s.includes(n)||n.includes(s))?t:null}).filter(e=>e).pop();return e[t]}();let e=document.createElement("div");e.className="cm-line",e.innerHTML="% Begin AI Generated Content:",i.insertAdjacentElement("afterend",e),i=e;let t=document.createElement("div");t.className="cm-line",i.insertAdjacentElement("afterend",t),i=t,d=[t]}else{document.getElementById("actions").style.display="flex";let e=document.getElementById("question");e.style.display="flex",e.textContent=l.value,e.value=l.value,document.getElementById("modalWrapper").style.height="85px"}chrome.runtime.sendMessage({input:l.value,selection:s,source:"modal"}),e&&r()}function m(e){console.log("in save feedback");let t=document.getElementById("question").value,n=document.getElementById("answer").textContent,l="BadResponse.txt";e&&(l="GoodResponse.txt");let s=l;o("gXZrF").appendFile(s,"Question: "+t+"\n Answer: "+n+"\n\n",e=>{e?console.log(e):console.log("Data appended successfully!")}),console.log("exit save feedback")}chrome.storage.sync.get({inlineMode:!1},t=>{console.log("Inline mode set to",e=t.inlineMode)}),document.addEventListener("keydown",function(e){let t=e.key;if("Escape"===t&&r(),a){let e=document.getElementById("modalInput");"Enter"==t&&e===document.activeElement&&c(!1)}}),chrome.runtime.onMessage.addListener((t,n,l)=>(t.showModal&&(console.log("Showing model"),function(){var e,t,n,l,o;r();let i=window.getSelection();"Range"==i.type?(e=i.getRangeAt(0).getBoundingClientRect(),console.log("Selected text:",s=window.getSelection().toString())):(e=document.getElementsByClassName("cm-activeLine")[0].getBoundingClientRect(),console.log("No text selection"),console.log(window.getSelection())),console.log("bounds",e);let d=document.getElementsByClassName("cm-content")[0],p=(t=e,(n=document.createElement("div")).className="modalWrapper",n.id="modalWrapper",n.style.top=t.bottom+5+"px",n.style.left=t.left+15+"px",n.style.width=d.offsetWidth-30+"px",n.style.height="45px",n.style.display="flex",n.style.position="absolute",n.style.flexDirection="column",n);document.body.appendChild(p);let u=((l=document.createElement("div")).className="question",l.id="question",l.placeholder="this is the question",l.style.width=d.offsetWidth-30+"px",l.style.height="30px",l.style.display="none",l.textContent="",l.style.padding="5px",l);p.appendChild(u);let g=((o=document.createElement("div")).className="answer",o.id="answer",o.style.width=d.offsetWidth-30+"px",o);p.appendChild(g);let y=function(e,t){var n,l,o=document.createElement("div");o.className="actions",o.id="actions",o.style.width=e.offsetWidth-30+"px",o.style.height="20px",o.style.display="none",o.style.flexDirection="row-reverse";var a=document.createElement("button");a.textContent="replace",a.style.fontSize="10px",a.style.backgroundColor="transparent",a.style.border="none",a.style.marginRight="10px",a.style.color="rgba(255, 255, 255, 0.6)",a.addEventListener("click",()=>{(function(e){let t=Array.from(document.getElementsByClassName("cm-line")).filter(e=>{let t=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return!!(t.length>0&&s.includes(t))});console.log("replacing",t),t.length>0&&(t[0].innerHTML=e,t.length>1&&t.slice(1).forEach(e=>{e.remove()}))})(document.getElementById("answer").innerHTML)}),o.appendChild(a);var i=document.createElement("button");i.textContent="Regenerate",i.style.fontSize="10px",i.style.backgroundColor="transparent",i.style.border="none",i.style.marginRight="5px",i.style.color="rgba(255, 255, 255, 0.6)",i.addEventListener("click",()=>{c(!0)}),o.appendChild(i);let[d,r]=((n=document.createElement("button")).textContent="Good Answer",n.style.fontSize="10px",n.style.backgroundColor="transparent",n.style.border="none",n.style.marginRight="5px",n.style.color="rgba(255, 255, 255, 0.6)",n.addEventListener("click",()=>{console.log("Saving as good answer"),m(!0)}),(l=document.createElement("button")).textContent="Bad Answer",l.style.fontSize="10px",l.style.backgroundColor="transparent",l.style.border="none",l.style.marginRight="5px",l.style.color="rgba(255, 255, 255, 0.6)",l.addEventListener("click",()=>{console.log("Saving as bad answer"),m(!1)}),[n,l]);return o.appendChild(r),o.appendChild(d),o}(d,0);p.appendChild(y);let h=function(e,t,n){var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative";var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative",t.appendChild(l);let o=document.createElement("div");o.style.width="32px",o.style.height="32px",o.style.display="flex",o.style.alignItems="center",o.style.justifyContent="center",o.style.marginLeft="3px";let s=document.createElement("img");s.style.height="20px",s.style.width="20px",s.src=chrome.runtime.getURL("icons/wand-64.png"),o.appendChild(s);let a=document.createElement("div");a.style.flexGrow=1,a.style.height="32px",a.display="flex",a.alignItems="center";let i=document.createElement("input");return i.type="search",i.placeholder="How can I help?",i.className="modalInput",i.id="modalInput",a.appendChild(i),l.appendChild(o),l.appendChild(a),l}(d,p,15);p.appendChild(h),document.getElementById("modalInput").focus(),a=!0}()),t.incomingMessage&&console.log("INCOMING MESSAGE"),t.message&&(console.log("content got message",t.message),function(t){if(e){if(t.split(/\r?\n/).length>d.length){let e=document.createElement("div");e.className="cm-line",i.insertAdjacentElement("afterend",e),i=e,d.push(e),i.scrollIntoView()}t.split(/\r?\n/).forEach(function(e,t){d[t].innerHTML=e})}else{let e=document.getElementById("answer");e.textContent=t,e.style.padding="5px",e.style.height="auto",e.scrollTop=e.scrollHeight,e.parentNode.style.height="auto",document.getElementById("modalInput").value=""}}(t.message)),!0))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
