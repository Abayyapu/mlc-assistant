(()=>{var e,t="",n=!1,l=null,o=[];function s(){n&&(document.getElementsByClassName("modalWrapper")[0].remove(),n=!1)}chrome.storage.sync.get({inlineMode:!1},t=>{console.log("Inline mode set to",e=t.inlineMode)}),document.addEventListener("keydown",function(i){let d=i.key;if("Escape"===d&&s(),n){let n=document.getElementById("modalInput");"Enter"==d&&n===document.activeElement&&function(){if(e){l=function(){let e=Array.from(document.getElementsByClassName("cm-content")[0].childNodes),n=e.flatMap((e,n)=>{if("cm-line"!=e.className)return null;let l=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return l.length>0&&(t.includes(l)||l.includes(t))?n:null}).filter(e=>e).pop();return e[n]}();let e=document.createElement("div");e.className="cm-line",e.innerHTML="% Begin AI Generated Content:",l.insertAdjacentElement("afterend",e),l=e;let n=document.createElement("div");n.className="cm-line",l.insertAdjacentElement("afterend",n),l=n,o=[n]}else console.log("showing"),document.getElementById("actions").style.display="flex",document.getElementById("modalWrapper").style.height="65px";let n=document.getElementById("modalInput");chrome.runtime.sendMessage({input:n.value,selection:t,source:"modal"}),e&&s()}()}}),chrome.runtime.onMessage.addListener((i,d,a)=>(i.showModal&&(console.log("Showing model"),function(){var e,l,o,i,d,a,c,m;s();let r=window.getSelection();"Range"==r.type?(e=r.getRangeAt(0).getBoundingClientRect(),console.log("Selected text:",t=window.getSelection().toString())):(e=document.getElementsByClassName("cm-activeLine")[0].getBoundingClientRect(),console.log("No text selection"),console.log(window.getSelection())),console.log("bounds",e);let p=document.getElementsByClassName("cm-content")[0],g=(l=e,(o=document.createElement("div")).className="modalWrapper",o.id="modalWrapper",o.style.top=l.bottom+5+"px",o.style.left=l.left+15+"px",o.style.width=p.offsetWidth-30+"px",o.style.height="120px",o.style.display="flex",o.style.position="absolute",o.style.flexDirection="column",o);document.body.appendChild(g);let u=((i=document.createElement("div")).className="question",i.id="question",i.placeholder="this is the question",i.style.width=p.offsetWidth-30+"px",i.style.height="20px",i.style.display="flex",i.textContent="question goes here",i.style.padding="5px",i);g.appendChild(u);let y=((d=document.createElement("div")).className="answer",d.id="answer",d.style.width=p.offsetWidth-30+"px",d);g.appendChild(y);let h=((a=document.createElement("div")).className="actions",a.id="actions",a.style.width=p.offsetWidth-30+"px",a.style.height="20px",a.style.display="none",a.style.flexDirection="row-reverse",(c=document.createElement("button")).textContent="replace",c.style.fontSize="10px",c.style.backgroundColor="transparent",c.style.border="none",c.style.marginRight="10px",c.style.color="rgba(255, 255, 255, 0.6)",c.addEventListener("click",()=>{(function(e){let n=Array.from(document.getElementsByClassName("cm-line")).filter(e=>{let n=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return!!(n.length>0&&t.includes(n))});console.log("replacing",n),n.length>0&&(n[0].innerHTML=e,n.length>1&&n.slice(1).forEach(e=>{e.remove()}))})(document.getElementById("answer").innerHTML)}),a.appendChild(c),(m=document.createElement("button")).textContent="Good Answer",m.style.fontSize="10px",m.style.backgroundColor="transparent",m.style.border="none",m.style.marginRight="5px",m.style.color="rgba(255, 255, 255, 0.6)",a.appendChild(m),a);g.appendChild(h);let f=function(e,t,n){var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative";var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative",t.appendChild(l);let o=document.createElement("div");o.style.width="32px",o.style.height="32px",o.style.display="flex",o.style.alignItems="center",o.style.justifyContent="center",o.style.marginLeft="3px";let s=document.createElement("img");s.style.height="20px",s.style.width="20px",s.src=chrome.runtime.getURL("icons/wand-64.png"),o.appendChild(s);let i=document.createElement("div");i.style.flexGrow=1,i.style.height="32px",i.display="flex",i.alignItems="center";let d=document.createElement("input");return d.type="search",d.placeholder="How can I help?",d.className="modalInput",d.id="modalInput",i.appendChild(d),l.appendChild(o),l.appendChild(i),l}(p,g,15);g.appendChild(f),document.getElementById("modalInput").focus(),n=!0}()),i.incomingMessage&&console.log("INCOMING MESSAGE"),i.message&&(console.log("content got message",i.message),function(t){if(e){if(t.split(/\r?\n/).length>o.length){let e=document.createElement("div");e.className="cm-line",l.insertAdjacentElement("afterend",e),l=e,o.push(e),l.scrollIntoView()}t.split(/\r?\n/).forEach(function(e,t){o[t].innerHTML=e})}else{let e=document.getElementById("answer");e.textContent=t,e.style.padding="5px",e.style.height="auto",e.scrollTop=e.scrollHeight,e.parentNode.style.height="auto",document.getElementById("modalInput").value=""}}(i.message)),!0))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
