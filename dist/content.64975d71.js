(()=>{var e,t="",n=!1,l=null,o=[];function s(){n&&(document.getElementsByClassName("modalWrapper")[0].remove(),n=!1)}chrome.storage.sync.get({inlineMode:!1},t=>{console.log("Inline mode set to",e=t.inlineMode)}),document.addEventListener("keydown",function(i){let a=i.key;if("Escape"===a&&s(),n){let n=document.getElementById("modalInput");"Enter"==a&&n===document.activeElement&&function(){if(e){l=function(){let e=Array.from(document.getElementsByClassName("cm-content")[0].childNodes),n=e.flatMap((e,n)=>{if("cm-line"!=e.className)return null;let l=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return l.length>0&&(t.includes(l)||l.includes(t))?n:null}).filter(e=>e).pop();return e[n]}();let e=document.createElement("div");e.className="cm-line",e.innerHTML="% Begin AI Generated Content:",l.insertAdjacentElement("afterend",e),l=e;let n=document.createElement("div");n.className="cm-line",l.insertAdjacentElement("afterend",n),l=n,o=[n]}else document.getElementById("actions").style.display="flex",document.getElementById("modalWrapper").style.height="65px";let n=document.getElementById("modalInput");chrome.runtime.sendMessage({input:n.value,selection:t,source:"modal"}),e&&s()}()}}),chrome.runtime.onMessage.addListener((i,a,d)=>(i.showModal&&function(){var e,l,o,i,a,d;s();let c=window.getSelection();"Range"==c.type?(e=c.getRangeAt(0).getBoundingClientRect(),console.log("Selected text:",t=window.getSelection().toString())):(e=document.getElementsByClassName("cm-activeLine")[0].getBoundingClientRect(),console.log("No text selection"),console.log(window.getSelection())),console.log("bounds",e);let m=document.getElementsByClassName("cm-content")[0],r=(l=e,(o=document.createElement("div")).className="modalWrapper",o.id="modalWrapper",o.style.top=l.bottom+5+"px",o.style.left=l.left+15+"px",o.style.width=m.offsetWidth-30+"px",o.style.height="40px",o.style.display="flex",o.style.position="absolute",o.style.flexDirection="column",o);document.body.appendChild(r);let p=((i=document.createElement("div")).className="answer",i.id="answer",i.style.width=m.offsetWidth-30+"px",i);r.appendChild(p);let u=((a=document.createElement("div")).className="actions",a.id="actions",a.style.width=m.offsetWidth-30+"px",a.style.height="20px",a.style.display="none",a.style.flexDirection="row-reverse",(d=document.createElement("button")).textContent="replace",d.style.fontSize="10px",d.style.backgroundColor="transparent",d.style.border="none",d.style.marginRight="10px",d.style.color="rgba(255, 255, 255, 0.6)",d.addEventListener("click",()=>{(function(e){let n=Array.from(document.getElementsByClassName("cm-line")).filter(e=>{let n=e.innerHTML.replace(/<\/?[^>]+(>|$)/g,"");return!!(n.length>0&&t.includes(n))});n.length>0&&(n[0].innerHTML=e,n.length>1&&n.slice(1).forEach(e=>{e.remove()}))})(document.getElementById("answer").innerHTML)}),a.appendChild(d),a);r.appendChild(u);let g=function(e,t,n){var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative";var l=document.createElement("div");l.className="modal",l.style.height="40px",l.style.width=e.offsetWidth-2*n+"px",l.style.display="flex",l.style.position="relative",t.appendChild(l);let o=document.createElement("div");o.style.width="32px",o.style.height="32px",o.style.display="flex",o.style.alignItems="center",o.style.justifyContent="center",o.style.marginLeft="3px";let s=document.createElement("img");s.style.height="20px",s.style.width="20px",s.src=chrome.runtime.getURL("icons/wand-64.png"),o.appendChild(s);let i=document.createElement("div");i.style.flexGrow=1,i.style.height="32px",i.display="flex",i.alignItems="center";let a=document.createElement("input");return a.type="search",a.placeholder="How can I help?",a.className="modalInput",a.id="modalInput",i.appendChild(a),l.appendChild(o),l.appendChild(i),l}(m,r,15);r.appendChild(g),document.getElementById("modalInput").focus(),n=!0}(),i.incomingMessage&&console.log("INCOMING MESSAGE"),i.message&&(console.log("content got message",i.message),function(t){if(e){if(t.split(/\r?\n/).length>o.length){let e=document.createElement("div");e.className="cm-line",l.insertAdjacentElement("afterend",e),l=e,o.push(e),l.scrollIntoView()}t.split(/\r?\n/).forEach(function(e,t){o[t].innerHTML=e})}else{let e=document.getElementById("answer");e.textContent=t,e.style.padding="5px",e.style.height="auto",e.scrollTop=e.scrollHeight,e.parentNode.style.height="auto",document.getElementById("modalInput").value=""}}(i.message)),!0))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FDWCxFQWlEd0MsRUFBWSxFQXBDeEIsSUFxQ3hCLEVBQWdCLFdBQVcsQ0FBQyxHQUc1QixTQUFTLGNBQWMsQ0FBQyxjQUFjLEtBQUssR0FFM0MsRUFBZSxDQUFBLENBQ25CLElBNEVRLEVBQVEsZUFBZSxFQUN2QixRQUFRLEdBQUcsQ0FBQyxvQkFHWixFQUFRLE9BQU8sR0FDZixRQUFRLEdBQUcsQ0FBQyxzQkFBdUIsRUFBUSxPQUFPLEVBQ2xELEFBekNSLFNBQXNCLENBQU0sRUFDeEIsR0FBSSxFQUFZLENBQ1osR0FBSSxFQUFPLEtBQUssQ0FBQyxTQUFTLE1BQU0sQ0FBRyxFQUFrQixNQUFNLENBQUUsQ0FDekQsSUFBTSxFQUFXLFNBQVMsYUFBYSxDQUFDLE1BQ3hDLENBQUEsRUFBUyxTQUFTLENBQUcsVUFDckIsRUFBZSxxQkFBcUIsQ0FBQyxXQUFZLEdBQ2pELEVBQWlCLEVBQ2pCLEVBQWtCLElBQUksQ0FBQyxHQUN2QixFQUFlLGNBQWMsRUFDakMsQ0FDQSxFQUFPLEtBQUssQ0FBQyxTQUFTLE9BQU8sQ0FBQyxTQUFVLENBQUssQ0FBRSxDQUFDLEVBQzVDLENBQWlCLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBRyxDQUNyQyxFQUNKLEtBQU8sQ0FDSCxJQUFNLEVBQVksU0FBUyxjQUFjLENBQUMsU0FDMUMsQ0FBQSxFQUFVLFdBQVcsQ0FBRyxFQUN4QixFQUFVLEtBQUssQ0FBQyxPQUFPLENBQUcsTUFDMUIsRUFBVSxLQUFLLENBQUMsTUFBTSxDQUFHLE9BQ3pCLEVBQVUsU0FBUyxDQUFHLEVBQVUsWUFBWSxDQUU1QyxFQUFVLFVBQVUsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFHLE9BR3BDLEFBRG1CLFNBQVMsY0FBYyxDQUFDLGNBQ2hDLEtBQUssQ0FBRyxFQUN2QixDQUdKLEVBY3FCLEVBQVEsT0FBTyxHQUd6QixDQUFBLEcsQyIsInNvdXJjZXMiOlsiPGFub24+Iiwic3JjL2NvbnRlbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiKCgpID0+IHtcbnZhciAkYWU3NjFiNmQ0YjFiYmJkYSRleHBvcnRzID0ge307XG52YXIgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJHNlbGVjdGVkVGV4dCA9IFwiXCI7XG52YXIgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJG1vZGFsVmlzaWJsZSA9IGZhbHNlO1xudmFyICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRsYXN0SW5saW5lTm9kZSA9IG51bGw7XG52YXIgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGlubGluZUFuc3dlck5vZGVzID0gQXJyYXkoKTtcbnZhciAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaW5saW5lTW9kZTtcbmNocm9tZS5zdG9yYWdlLnN5bmMuZ2V0KHtcbiAgICBpbmxpbmVNb2RlOiBmYWxzZVxufSwgKGl0ZW1zKT0+e1xuICAgICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRpbmxpbmVNb2RlID0gaXRlbXMuaW5saW5lTW9kZTtcbiAgICBjb25zb2xlLmxvZyhcIklubGluZSBtb2RlIHNldCB0b1wiLCAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaW5saW5lTW9kZSk7XG59KTtcbmZ1bmN0aW9uICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRoaWRlTW9kYWxJZlZpc2libGUoKSB7XG4gICAgaWYgKCRhZTc2MWI2ZDRiMWJiYmRhJHZhciRtb2RhbFZpc2libGUpIHtcbiAgICAgICAgY29uc3QgbW9kYWxXcmFwcGVyRGl2cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtb2RhbFdyYXBwZXJcIik7XG4gICAgICAgIG1vZGFsV3JhcHBlckRpdnNbMF0ucmVtb3ZlKCk7XG4gICAgICAgICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRtb2RhbFZpc2libGUgPSBmYWxzZTtcbiAgICB9XG59XG5mdW5jdGlvbiAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaGFuZGxlU3VibWl0KCkge1xuICAgIGlmICgkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaW5saW5lTW9kZSkge1xuICAgICAgICAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkbGFzdElubGluZU5vZGUgPSAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkc2VsZWN0SW5saW5lTm9kZSgpO1xuICAgICAgICBjb25zdCBiZWdpbk5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBiZWdpbk5vZGUuY2xhc3NOYW1lID0gXCJjbS1saW5lXCI7XG4gICAgICAgIGJlZ2luTm9kZS5pbm5lckhUTUwgPSBcIiUgQmVnaW4gQUkgR2VuZXJhdGVkIENvbnRlbnQ6XCI7XG4gICAgICAgICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRsYXN0SW5saW5lTm9kZS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJhZnRlcmVuZFwiLCBiZWdpbk5vZGUpO1xuICAgICAgICAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkbGFzdElubGluZU5vZGUgPSBiZWdpbk5vZGU7XG4gICAgICAgIGNvbnN0IGZpcnN0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGZpcnN0Tm9kZS5jbGFzc05hbWUgPSBcImNtLWxpbmVcIjtcbiAgICAgICAgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGxhc3RJbmxpbmVOb2RlLmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyZW5kXCIsIGZpcnN0Tm9kZSk7XG4gICAgICAgICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRsYXN0SW5saW5lTm9kZSA9IGZpcnN0Tm9kZTtcbiAgICAgICAgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGlubGluZUFuc3dlck5vZGVzID0gW1xuICAgICAgICAgICAgZmlyc3ROb2RlXG4gICAgICAgIF07XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gU2hvdyB0aGUgYWN0aW9uIGJhciBcbiAgICAgICAgY29uc3QgYWN0aW9uc0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWN0aW9uc1wiKTtcbiAgICAgICAgYWN0aW9uc0Rpdi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgICAgIGNvbnN0IG1vZGFsV3JhcHBlckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kYWxXcmFwcGVyXCIpO1xuICAgICAgICBtb2RhbFdyYXBwZXJEaXYuc3R5bGUuaGVpZ2h0ID0gXCI2NXB4XCI7XG4gICAgfVxuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbElucHV0XCIpO1xuICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgaW5wdXQ6IGlucHV0LnZhbHVlLFxuICAgICAgICBzZWxlY3Rpb246ICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRzZWxlY3RlZFRleHQsXG4gICAgICAgIHNvdXJjZTogXCJtb2RhbFwiXG4gICAgfSk7XG4gICAgaWYgKCRhZTc2MWI2ZDRiMWJiYmRhJHZhciRpbmxpbmVNb2RlKSAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaGlkZU1vZGFsSWZWaXNpYmxlKCk7XG59XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBmdW5jdGlvbihldmVudCkge1xuICAgIGNvbnN0IGtleSA9IGV2ZW50LmtleTtcbiAgICBpZiAoa2V5ID09PSBcIkVzY2FwZVwiKSAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaGlkZU1vZGFsSWZWaXNpYmxlKCk7XG4gICAgaWYgKCRhZTc2MWI2ZDRiMWJiYmRhJHZhciRtb2RhbFZpc2libGUpIHtcbiAgICAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsSW5wdXRcIik7XG4gICAgICAgIGlmIChrZXkgPT0gXCJFbnRlclwiICYmIGlucHV0ID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50KSAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaGFuZGxlU3VibWl0KCk7XG4gICAgfVxufSk7XG5mdW5jdGlvbiAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkY3JlYXRlTW9kYWxXcmFwcGVyKGNvbnRlbnREaXYsIGJvdW5kaW5nUmVjdCwgdG9wTWFyZ2luLCBsZWZ0UmlnaHRNYXJnaW4pIHtcbiAgICB2YXIgbW9kYWxXcmFwcGVyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBtb2RhbFdyYXBwZXJEaXYuY2xhc3NOYW1lID0gXCJtb2RhbFdyYXBwZXJcIjtcbiAgICBtb2RhbFdyYXBwZXJEaXYuaWQgPSBcIm1vZGFsV3JhcHBlclwiO1xuICAgIG1vZGFsV3JhcHBlckRpdi5zdHlsZS50b3AgPSBib3VuZGluZ1JlY3QuYm90dG9tICsgdG9wTWFyZ2luICsgXCJweFwiO1xuICAgIG1vZGFsV3JhcHBlckRpdi5zdHlsZS5sZWZ0ID0gYm91bmRpbmdSZWN0LmxlZnQgKyBsZWZ0UmlnaHRNYXJnaW4gKyBcInB4XCI7XG4gICAgbW9kYWxXcmFwcGVyRGl2LnN0eWxlLndpZHRoID0gY29udGVudERpdi5vZmZzZXRXaWR0aCAtIDIgKiBsZWZ0UmlnaHRNYXJnaW4gKyBcInB4XCI7XG4gICAgbW9kYWxXcmFwcGVyRGl2LnN0eWxlLmhlaWdodCA9IFwiNDBweFwiO1xuICAgIG1vZGFsV3JhcHBlckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgbW9kYWxXcmFwcGVyRGl2LnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgIG1vZGFsV3JhcHBlckRpdi5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJjb2x1bW5cIjtcbiAgICByZXR1cm4gbW9kYWxXcmFwcGVyRGl2O1xufVxuZnVuY3Rpb24gJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGNyZWF0ZUFjdGlvbkJhcihjb250ZW50RGl2LCBsZWZ0UmlnaHRNYXJnaW4pIHtcbiAgICB2YXIgYWN0aW9uc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgYWN0aW9uc0Rpdi5jbGFzc05hbWUgPSBcImFjdGlvbnNcIjtcbiAgICBhY3Rpb25zRGl2LmlkID0gXCJhY3Rpb25zXCI7XG4gICAgYWN0aW9uc0Rpdi5zdHlsZS53aWR0aCA9IGNvbnRlbnREaXYub2Zmc2V0V2lkdGggLSAyICogbGVmdFJpZ2h0TWFyZ2luICsgXCJweFwiO1xuICAgIGFjdGlvbnNEaXYuc3R5bGUuaGVpZ2h0ID0gXCIyMHB4XCI7XG4gICAgYWN0aW9uc0Rpdi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgYWN0aW9uc0Rpdi5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJyb3ctcmV2ZXJzZVwiO1xuICAgIHZhciByZXBsYWNlQWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICByZXBsYWNlQWN0aW9uLnRleHRDb250ZW50ID0gXCJyZXBsYWNlXCI7XG4gICAgcmVwbGFjZUFjdGlvbi5zdHlsZS5mb250U2l6ZSA9IFwiMTBweFwiO1xuICAgIHJlcGxhY2VBY3Rpb24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJ0cmFuc3BhcmVudFwiO1xuICAgIHJlcGxhY2VBY3Rpb24uc3R5bGUuYm9yZGVyID0gXCJub25lXCI7XG4gICAgcmVwbGFjZUFjdGlvbi5zdHlsZS5tYXJnaW5SaWdodCA9IFwiMTBweFwiO1xuICAgIHJlcGxhY2VBY3Rpb24uc3R5bGUuY29sb3IgPSBcInJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KVwiO1xuICAgIHJlcGxhY2VBY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpPT57XG4gICAgICAgIC8vIEdldCBvdXRwdXQgdGV4dFxuICAgICAgICBjb25zdCBvdXRwdXRUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhbnN3ZXJcIikuaW5uZXJIVE1MO1xuICAgICAgICAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkcmVwbGFjZVNlbGVjdGVkVGV4dChvdXRwdXRUZXh0KTtcbiAgICB9KTtcbiAgICBhY3Rpb25zRGl2LmFwcGVuZENoaWxkKHJlcGxhY2VBY3Rpb24pO1xuICAgIHJldHVybiBhY3Rpb25zRGl2O1xufVxuZnVuY3Rpb24gJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGNyZWF0ZUlucHV0TW9kYWwoY29udGVudERpdiwgbW9kYWxXcmFwcGVyRGl2LCBsZWZ0UmlnaHRNYXJnaW4pIHtcbiAgICAvLyBDcmVhdGUgYW5kIGFkZCBtb2RhbCB0byBtb2RhbCB3cmFwcGVyXG4gICAgdmFyIG1vZGFsRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBtb2RhbERpdi5jbGFzc05hbWUgPSBcIm1vZGFsXCI7XG4gICAgbW9kYWxEaXYuc3R5bGUuaGVpZ2h0ID0gXCI0MHB4XCI7XG4gICAgbW9kYWxEaXYuc3R5bGUud2lkdGggPSBjb250ZW50RGl2Lm9mZnNldFdpZHRoIC0gMiAqIGxlZnRSaWdodE1hcmdpbiArIFwicHhcIjtcbiAgICBtb2RhbERpdi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgbW9kYWxEaXYuc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG4gICAgLy8gQ3JlYXRlIGFuZCBhZGQgbW9kYWwgdG8gbW9kYWwgd3JhcHBlclxuICAgIHZhciBtb2RhbERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbW9kYWxEaXYuY2xhc3NOYW1lID0gXCJtb2RhbFwiO1xuICAgIG1vZGFsRGl2LnN0eWxlLmhlaWdodCA9IFwiNDBweFwiO1xuICAgIG1vZGFsRGl2LnN0eWxlLndpZHRoID0gY29udGVudERpdi5vZmZzZXRXaWR0aCAtIDIgKiBsZWZ0UmlnaHRNYXJnaW4gKyBcInB4XCI7XG4gICAgbW9kYWxEaXYuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIG1vZGFsRGl2LnN0eWxlLnBvc2l0aW9uID0gXCJyZWxhdGl2ZVwiO1xuICAgIG1vZGFsV3JhcHBlckRpdi5hcHBlbmRDaGlsZChtb2RhbERpdik7XG4gICAgLy8gQWRkIGVsZW1lbnRzIHRvIG1vZGFsXG4gICAgY29uc3QgaWNvbkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgaWNvbkRpdi5zdHlsZS53aWR0aCA9IFwiMzJweFwiO1xuICAgIGljb25EaXYuc3R5bGUuaGVpZ2h0ID0gXCIzMnB4XCI7XG4gICAgaWNvbkRpdi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgaWNvbkRpdi5zdHlsZS5hbGlnbkl0ZW1zID0gXCJjZW50ZXJcIjtcbiAgICBpY29uRGl2LnN0eWxlLmp1c3RpZnlDb250ZW50ID0gXCJjZW50ZXJcIjtcbiAgICBpY29uRGl2LnN0eWxlLm1hcmdpbkxlZnQgPSBcIjNweFwiO1xuICAgIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGljb24uc3R5bGUuaGVpZ2h0ID0gXCIyMHB4XCI7XG4gICAgaWNvbi5zdHlsZS53aWR0aCA9IFwiMjBweFwiO1xuICAgIGljb24uc3JjID0gY2hyb21lLnJ1bnRpbWUuZ2V0VVJMKFwiaWNvbnMvd2FuZC02NC5wbmdcIik7XG4gICAgaWNvbkRpdi5hcHBlbmRDaGlsZChpY29uKTtcbiAgICBjb25zdCBpbnB1dERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgaW5wdXREaXYuc3R5bGUuZmxleEdyb3cgPSAxO1xuICAgIGlucHV0RGl2LnN0eWxlLmhlaWdodCA9IFwiMzJweFwiO1xuICAgIGlucHV0RGl2LmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICBpbnB1dERpdi5hbGlnbkl0ZW1zID0gXCJjZW50ZXJcIjtcbiAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBpbnB1dC50eXBlID0gXCJzZWFyY2hcIjtcbiAgICBpbnB1dC5wbGFjZWhvbGRlciA9IFwiSG93IGNhbiBJIGhlbHA/XCI7XG4gICAgaW5wdXQuY2xhc3NOYW1lID0gXCJtb2RhbElucHV0XCI7XG4gICAgaW5wdXQuaWQgPSBcIm1vZGFsSW5wdXRcIjtcbiAgICBpbnB1dERpdi5hcHBlbmRDaGlsZChpbnB1dCk7XG4gICAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQoaWNvbkRpdik7XG4gICAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQoaW5wdXREaXYpO1xuICAgIHJldHVybiBtb2RhbERpdjtcbn1cbmZ1bmN0aW9uICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRjcmVhdGVBbnN3ZXJNb2RhbChjb250ZW50RGl2LCBsZWZ0UmlnaHRNYXJnaW4pIHtcbiAgICB2YXIgYW5zd2VyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBhbnN3ZXJEaXYuY2xhc3NOYW1lID0gXCJhbnN3ZXJcIjtcbiAgICBhbnN3ZXJEaXYuaWQgPSBcImFuc3dlclwiO1xuICAgIGFuc3dlckRpdi5zdHlsZS53aWR0aCA9IGNvbnRlbnREaXYub2Zmc2V0V2lkdGggLSAyICogbGVmdFJpZ2h0TWFyZ2luICsgXCJweFwiO1xuICAgIHJldHVybiBhbnN3ZXJEaXY7XG59XG5mdW5jdGlvbiAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkc2hvd01vZGFsKCkge1xuICAgIC8vIFBhcmFtc1xuICAgIGNvbnN0IGxlZnRSaWdodE1hcmdpbiA9IDE1O1xuICAgIGNvbnN0IHRvcE1hcmdpbiA9IDU7XG4gICAgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGhpZGVNb2RhbElmVmlzaWJsZSgpO1xuICAgIGNvbnN0IHNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTtcbiAgICB2YXIgYm91bmRpbmdSZWN0O1xuICAgIGlmIChzZWxlY3Rpb24udHlwZSA9PSBcIlJhbmdlXCIpIHtcbiAgICAgICAgLy8gU2VsZWN0ZWQgYSBidW5jaCBvZiB0ZXh0LCBzaG93IGJlbG93IHNlbGVjdGlvblxuICAgICAgICBib3VuZGluZ1JlY3QgPSBzZWxlY3Rpb24uZ2V0UmFuZ2VBdCgwKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJHNlbGVjdGVkVGV4dCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKS50b1N0cmluZygpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIlNlbGVjdGVkIHRleHQ6XCIsICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRzZWxlY3RlZFRleHQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE5vIHNlbGVjdGlvbiwgc2hvdyBiZWxvdyBhY3RpdmUgbGluZVxuICAgICAgICBjb25zdCBhY3RpdmVMaW5lID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNtLWFjdGl2ZUxpbmVcIilbMF07XG4gICAgICAgIGJvdW5kaW5nUmVjdCA9IGFjdGl2ZUxpbmUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiTm8gdGV4dCBzZWxlY3Rpb25cIik7XG4gICAgICAgIGNvbnNvbGUubG9nKHdpbmRvdy5nZXRTZWxlY3Rpb24oKSk7XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKFwiYm91bmRzXCIsIGJvdW5kaW5nUmVjdCk7XG4gICAgY29uc3QgY29udGVudERpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjbS1jb250ZW50XCIpWzBdO1xuICAgIC8vIENyZWF0ZSBhbmQgYWRkIG1vZGFsIHdyYXBwZXIgdG8gRE9NXG4gICAgY29uc3QgbW9kYWxXcmFwcGVyRGl2ID0gJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGNyZWF0ZU1vZGFsV3JhcHBlcihjb250ZW50RGl2LCBib3VuZGluZ1JlY3QsIHRvcE1hcmdpbiwgbGVmdFJpZ2h0TWFyZ2luKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1vZGFsV3JhcHBlckRpdik7XG4gICAgLy8gQ3JlYXRlIGFuc3dlclxuICAgIGNvbnN0IGFuc3dlckRpdiA9ICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRjcmVhdGVBbnN3ZXJNb2RhbChjb250ZW50RGl2LCBsZWZ0UmlnaHRNYXJnaW4pO1xuICAgIG1vZGFsV3JhcHBlckRpdi5hcHBlbmRDaGlsZChhbnN3ZXJEaXYpO1xuICAgIC8vIENyZWF0ZSBhY3Rpb24gYmFyXG4gICAgY29uc3QgYWN0aW9uc0RpdiA9ICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRjcmVhdGVBY3Rpb25CYXIoY29udGVudERpdiwgbGVmdFJpZ2h0TWFyZ2luKTtcbiAgICBtb2RhbFdyYXBwZXJEaXYuYXBwZW5kQ2hpbGQoYWN0aW9uc0Rpdik7XG4gICAgLy8gQ3JlYXRlIGlucHV0XG4gICAgY29uc3QgaW5wdXRNb2RhbCA9ICRhZTc2MWI2ZDRiMWJiYmRhJHZhciRjcmVhdGVJbnB1dE1vZGFsKGNvbnRlbnREaXYsIG1vZGFsV3JhcHBlckRpdiwgbGVmdFJpZ2h0TWFyZ2luKTtcbiAgICBtb2RhbFdyYXBwZXJEaXYuYXBwZW5kQ2hpbGQoaW5wdXRNb2RhbCk7XG4gICAgLy8gTWFrZSB0aGUgaW5wdXQgdGhlIGZvY3VzXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbElucHV0XCIpLmZvY3VzKCk7XG4gICAgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJG1vZGFsVmlzaWJsZSA9IHRydWU7XG59XG5mdW5jdGlvbiAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkcmVwbGFjZVNlbGVjdGVkVGV4dChuZXdUZXh0KSB7XG4gICAgY29uc3Qgbm9kZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjbS1saW5lXCIpKS5maWx0ZXIoKGVsKT0+e1xuICAgICAgICBjb25zdCBjbGVhblRleHQgPSBlbC5pbm5lckhUTUwucmVwbGFjZSgvPFxcLz9bXj5dKyg+fCQpL2csIFwiXCIpO1xuICAgICAgICBpZiAoY2xlYW5UZXh0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGlmICgkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkc2VsZWN0ZWRUZXh0LmluY2x1ZGVzKGNsZWFuVGV4dCkpIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbiAgICAvLyBSZXBsYWNlIGNvbnRlbnQgb2YgZmlyc3Qgbm9kZSB3aXRoIG5ldyB0ZXh0LCBhbmQgcmVtb3ZlIGFsbCBzdWJzZXF1ZW50IG5vZGVzXG4gICAgaWYgKG5vZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbm9kZXNbMF0uaW5uZXJIVE1MID0gbmV3VGV4dDtcbiAgICAgICAgaWYgKG5vZGVzLmxlbmd0aCA+IDEpIG5vZGVzLnNsaWNlKDEpLmZvckVhY2goKG5vZGUpPT57XG4gICAgICAgICAgICBub2RlLnJlbW92ZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5mdW5jdGlvbiAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkc2VsZWN0SW5saW5lTm9kZSgpIHtcbiAgICAvLyBGaW5kIG5vZGUgYmVsb3cgc2VsZWN0ZWQgdGV4dFxuICAgIGNvbnN0IGNvbnRlbnROb2RlcyA9IEFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNtLWNvbnRlbnRcIilbMF0uY2hpbGROb2Rlcyk7XG4gICAgY29uc3QgbGFzdE5vZGVJZHggPSBjb250ZW50Tm9kZXMuZmxhdE1hcCgoZWwsIGlkeCk9PntcbiAgICAgICAgaWYgKGVsLmNsYXNzTmFtZSAhPSBcImNtLWxpbmVcIikgcmV0dXJuIG51bGw7XG4gICAgICAgIGNvbnN0IGNsZWFuVGV4dCA9IGVsLmlubmVySFRNTC5yZXBsYWNlKC88XFwvP1tePl0rKD58JCkvZywgXCJcIik7XG4gICAgICAgIGlmIChjbGVhblRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgaWYgKCRhZTc2MWI2ZDRiMWJiYmRhJHZhciRzZWxlY3RlZFRleHQuaW5jbHVkZXMoY2xlYW5UZXh0KSB8fCBjbGVhblRleHQuaW5jbHVkZXMoJGFlNzYxYjZkNGIxYmJiZGEkdmFyJHNlbGVjdGVkVGV4dCkpIHJldHVybiBpZHg7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSkuZmlsdGVyKCh4KT0+eCkucG9wKCk7XG4gICAgcmV0dXJuIGNvbnRlbnROb2Rlc1tsYXN0Tm9kZUlkeF07XG59XG5mdW5jdGlvbiAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkdXBkYXRlQW5zd2VyKGFuc3dlcikge1xuICAgIGlmICgkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaW5saW5lTW9kZSkge1xuICAgICAgICBpZiAoYW5zd2VyLnNwbGl0KC9cXHI/XFxuLykubGVuZ3RoID4gJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGlubGluZUFuc3dlck5vZGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgbmV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgbmV4dE5vZGUuY2xhc3NOYW1lID0gXCJjbS1saW5lXCI7XG4gICAgICAgICAgICAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkbGFzdElubGluZU5vZGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJlbmRcIiwgbmV4dE5vZGUpO1xuICAgICAgICAgICAgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGxhc3RJbmxpbmVOb2RlID0gbmV4dE5vZGU7XG4gICAgICAgICAgICAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaW5saW5lQW5zd2VyTm9kZXMucHVzaChuZXh0Tm9kZSk7XG4gICAgICAgICAgICAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkbGFzdElubGluZU5vZGUuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgICAgfVxuICAgICAgICBhbnN3ZXIuc3BsaXQoL1xccj9cXG4vKS5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBpKSB7XG4gICAgICAgICAgICAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaW5saW5lQW5zd2VyTm9kZXNbaV0uaW5uZXJIVE1MID0gdmFsdWU7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGFuc3dlckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYW5zd2VyXCIpO1xuICAgICAgICBhbnN3ZXJEaXYudGV4dENvbnRlbnQgPSBhbnN3ZXI7XG4gICAgICAgIGFuc3dlckRpdi5zdHlsZS5wYWRkaW5nID0gXCI1cHhcIjtcbiAgICAgICAgYW5zd2VyRGl2LnN0eWxlLmhlaWdodCA9IFwiYXV0b1wiO1xuICAgICAgICBhbnN3ZXJEaXYuc2Nyb2xsVG9wID0gYW5zd2VyRGl2LnNjcm9sbEhlaWdodDtcbiAgICAgICAgYW5zd2VyRGl2LnBhcmVudE5vZGUuc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCI7XG4gICAgICAgIGNvbnN0IG1vZGFsSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsSW5wdXRcIik7XG4gICAgICAgIG1vZGFsSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgIH1cbn1cbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcigocmVxdWVzdCwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpPT57XG4gICAgaWYgKHJlcXVlc3Quc2hvd01vZGFsKSAkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkc2hvd01vZGFsKCk7XG4gICAgaWYgKHJlcXVlc3QuaW5jb21pbmdNZXNzYWdlKSBjb25zb2xlLmxvZyhcIklOQ09NSU5HIE1FU1NBR0VcIik7XG4gICAgaWYgKHJlcXVlc3QubWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcImNvbnRlbnQgZ290IG1lc3NhZ2VcIiwgcmVxdWVzdC5tZXNzYWdlKTtcbiAgICAgICAgJGFlNzYxYjZkNGIxYmJiZGEkdmFyJHVwZGF0ZUFuc3dlcihyZXF1ZXN0Lm1lc3NhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn0pO1xuXG59KSgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SnRZWEJ3YVc1bmN5STZJanM3UVVGQlFTeEpRVUZKTEhGRFFVRmxPMEZCUTI1Q0xFbEJRVWtzY1VOQlFXVTdRVUZEYmtJc1NVRkJTU3gxUTBGQmFVSTdRVUZEY2tJc1NVRkJTU3d3UTBGQmIwSTdRVUZGZUVJc1NVRkJTVHRCUVVOS0xFOUJRVThzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUTI1Q08wbEJRVVVzV1VGQldUdEJRVUZOTEVkQlEzQkNMRU5CUVVNN1NVRkRSeXh0UTBGQllTeE5RVUZOTEZWQlFWVTdTVUZETjBJc1VVRkJVU3hIUVVGSExFTkJRVU1zYzBKQlFYTkNPMEZCUTNSRE8wRkJTVW9zVTBGQlV6dEpRVU5NTEVsQlFVa3NiME5CUVdNN1VVRkRaQ3hOUVVGTkxHMUNRVUZ0UWl4VFFVRlRMSE5DUVVGelFpeERRVUZETzFGQlEzcEVMR2RDUVVGblFpeERRVUZETEVWQlFVVXNRMEZCUXl4TlFVRk5PMUZCUXpGQ0xIRkRRVUZsTzBsQlEyNUNPMEZCUTBvN1FVRkZRU3hUUVVGVE8wbEJRMHdzU1VGQlNTeHJRMEZCV1R0UlFVTmFMSFZEUVVGcFFqdFJRVU5xUWl4TlFVRk5MRmxCUVZrc1UwRkJVeXhoUVVGaExFTkJRVU03VVVGRGVrTXNWVUZCVlN4VFFVRlRMRWRCUVVjN1VVRkRkRUlzVlVGQlZTeFRRVUZUTEVkQlFVYzdVVUZEZEVJc2NVTkJRV1VzY1VKQlFYRkNMRU5CUVVNc1dVRkJXVHRSUVVOcVJDeDFRMEZCYVVJN1VVRkZha0lzVFVGQlRTeFpRVUZaTEZOQlFWTXNZVUZCWVN4RFFVRkRPMUZCUTNwRExGVkJRVlVzVTBGQlV5eEhRVUZITzFGQlEzUkNMSEZEUVVGbExIRkNRVUZ4UWl4RFFVRkRMRmxCUVZrN1VVRkRha1FzZFVOQlFXbENPMUZCUTJwQ0xEQkRRVUZ2UWp0WlFVRkRPMU5CUVZVN1NVRkRia01zVDBGQlR6dFJRVU5JTEhWQ1FVRjFRanRSUVVOMlFpeE5RVUZOTEdGQlFXRXNVMEZCVXl4alFVRmpMRU5CUVVNN1VVRkRNME1zVjBGQlZ5eExRVUZMTEVOQlFVTXNUMEZCVHl4SFFVRkhPMUZCUXpOQ0xFMUJRVTBzYTBKQlFXdENMRk5CUVZNc1kwRkJZeXhEUVVGRE8xRkJRMmhFTEdkQ1FVRm5RaXhMUVVGTExFTkJRVU1zVFVGQlRTeEhRVUZITzBsQlEyNURPMGxCUlVFc1RVRkJUU3hSUVVGUkxGTkJRVk1zWTBGQll5eERRVUZETzBsQlEzUkRMRTlCUVU4c1QwRkJUeXhEUVVGRExGZEJRVmNzUTBGQlF6dFJRVU4yUWl4UFFVRlBMRTFCUVUwc1MwRkJTenRSUVVOc1FpeFhRVUZYTzFGQlExZ3NVVUZCVVR0SlFVTmFPMGxCUlVFc1NVRkJTU3hyUTBGRFFUdEJRVVZTTzBGQlJVRXNVMEZCVXl4blFrRkJaMElzUTBGQlF5eFhRVUZYTEZOQlFWTXNTMEZCU3p0SlFVTXZReXhOUVVGTkxFMUJRVTBzVFVGQlRTeEhRVUZITzBsQlEzSkNMRWxCUVVrc1VVRkJVU3hWUVVOU08wbEJSVW9zU1VGQlNTeHZRMEZCWXp0UlFVTmtMRTFCUVUwc1VVRkJVU3hUUVVGVExHTkJRV01zUTBGQlF6dFJRVU4wUXl4SlFVRkpMRTlCUVU4c1YwRkJWeXhWUVVGVkxGTkJRVk1zWVVGQllTeEZRVU5zUkR0SlFVVlNPMEZCUTBvN1FVRkZRU3hUUVVGVExIbERRVUZ0UWl4VlFVRlZMRVZCUVVVc1dVRkJXU3hGUVVGRkxGTkJRVk1zUlVGQlJTeGxRVUZsTzBsQlJUVkZMRWxCUVVrc2EwSkJRVzFDTEZOQlFWTXNZVUZCWVN4RFFVRkRPMGxCUXpsRExHZENRVUZuUWl4VFFVRlRMRWRCUVVjN1NVRkROVUlzWjBKQlFXZENMRVZCUVVVc1IwRkJSenRKUVVOeVFpeG5Ra0ZCWjBJc1MwRkJTeXhEUVVGRExFZEJRVWNzUjBGQlJ5eGhRVUZoTEUxQlFVMHNSMEZCUnl4WlFVRlpPMGxCUXpsRUxHZENRVUZuUWl4TFFVRkxMRU5CUVVNc1NVRkJTU3hIUVVGSExHRkJRV0VzU1VGQlNTeEhRVUZITEd0Q1FVRnJRanRKUVVOdVJTeG5Ra0ZCWjBJc1MwRkJTeXhEUVVGRExFdEJRVXNzUjBGQlJ5eFhRVUZYTEZkQlFWY3NSMEZCUnl4SlFVRkZMR3RDUVVGclFqdEpRVU16UlN4blFrRkJaMElzUzBGQlN5eERRVUZETEUxQlFVMHNSMEZCUnp0SlFVTXZRaXhuUWtGQlowSXNTMEZCU3l4RFFVRkRMRTlCUVU4c1IwRkJSenRKUVVOb1F5eG5Ra0ZCWjBJc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ6dEpRVU5xUXl4blFrRkJaMElzUzBGQlN5eERRVUZETEdGQlFXRXNSMEZCUnp0SlFVTjBReXhQUVVGUE8wRkJRMWc3UVVGRlFTeFRRVUZUTEhORFFVRm5RaXhWUVVGVkxFVkJRVVVzWlVGQlpUdEpRVU5vUkN4SlFVRkpMR0ZCUVdFc1UwRkJVeXhoUVVGaExFTkJRVU03U1VGRGVFTXNWMEZCVnl4VFFVRlRMRWRCUVVjN1NVRkRka0lzVjBGQlZ5eEZRVUZGTEVkQlFVYzdTVUZEYUVJc1YwRkJWeXhMUVVGTExFTkJRVU1zUzBGQlN5eEhRVUZITEZkQlFWY3NWMEZCVnl4SFFVRkhMRWxCUVVVc2EwSkJRV3RDTzBsQlEzUkZMRmRCUVZjc1MwRkJTeXhEUVVGRExFMUJRVTBzUjBGQlJ6dEpRVU14UWl4WFFVRlhMRXRCUVVzc1EwRkJReXhQUVVGUExFZEJRVWM3U1VGRE0wSXNWMEZCVnl4TFFVRkxMRU5CUVVNc1lVRkJZU3hIUVVGSE8wbEJSV3BETEVsQlFVa3NaMEpCUVdkQ0xGTkJRVk1zWVVGQllTeERRVUZETzBsQlF6TkRMR05CUVdNc1YwRkJWeXhIUVVGSE8wbEJRelZDTEdOQlFXTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1IwRkJSenRKUVVNdlFpeGpRVUZqTEV0QlFVc3NRMEZCUXl4bFFVRmxMRWRCUVVjN1NVRkRkRU1zWTBGQll5eExRVUZMTEVOQlFVTXNUVUZCVFN4SFFVRkhPMGxCUXpkQ0xHTkJRV01zUzBGQlN5eERRVUZETEZkQlFWY3NSMEZCUnp0SlFVTnNReXhqUVVGakxFdEJRVXNzUTBGQlF5eExRVUZMTEVkQlFVYzdTVUZGTlVJc1kwRkJZeXhuUWtGQlowSXNRMEZCUXl4VFFVRlRPMUZCUTNCRExHdENRVUZyUWp0UlFVTnNRaXhOUVVGTkxHRkJRV0VzVTBGQlV5eGpRVUZqTEVOQlFVTXNWVUZCVlN4VFFVRlRPMUZCUXpsRUxEQkRRVUZ2UWp0SlFVTjRRanRKUVVWQkxGZEJRVmNzVjBGQlZ5eERRVUZETzBsQlJYWkNMRTlCUVU4N1FVRkRXRHRCUVVWQkxGTkJRVk1zZFVOQlFXbENMRlZCUVZVc1JVRkJSU3hsUVVGbExFVkJRVVVzWlVGQlpUdEpRVVZzUlN4M1EwRkJkME03U1VGRGVFTXNTVUZCU1N4WFFVRlhMRk5CUVZNc1lVRkJZU3hEUVVGRE8wbEJRM1JETEZOQlFWTXNVMEZCVXl4SFFVRkhPMGxCUTNKQ0xGTkJRVk1zUzBGQlN5eERRVUZETEUxQlFVMHNSMEZCUnp0SlFVTjRRaXhUUVVGVExFdEJRVXNzUTBGQlF5eExRVUZMTEVkQlFVY3NWMEZCVnl4WFFVRlhMRWRCUVVjc1NVRkJSU3hyUWtGQmJVSTdTVUZEY2tVc1UwRkJVeXhMUVVGTExFTkJRVU1zVDBGQlR5eEhRVUZITzBsQlEzcENMRk5CUVZNc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ6dEpRVVV4UWl4M1EwRkJkME03U1VGRGVFTXNTVUZCU1N4WFFVRlhMRk5CUVZNc1lVRkJZU3hEUVVGRE8wbEJRM1JETEZOQlFWTXNVMEZCVXl4SFFVRkhPMGxCUTNKQ0xGTkJRVk1zUzBGQlN5eERRVUZETEUxQlFVMHNSMEZCUnp0SlFVTjRRaXhUUVVGVExFdEJRVXNzUTBGQlF5eExRVUZMTEVkQlFVY3NWMEZCVnl4WFFVRlhMRWRCUVVjc1NVRkJSU3hyUWtGQmJVSTdTVUZEY2tVc1UwRkJVeXhMUVVGTExFTkJRVU1zVDBGQlR5eEhRVUZITzBsQlEzcENMRk5CUVZNc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ6dEpRVU14UWl4blFrRkJaMElzVjBGQlZ5eERRVUZETzBsQlJUVkNMSGRDUVVGM1FqdEpRVU40UWl4TlFVRk5MRlZCUVZVc1UwRkJVeXhoUVVGaExFTkJRVU03U1VGRGRrTXNVVUZCVVN4TFFVRkxMRU5CUVVNc1MwRkJTeXhIUVVGSE8wbEJRM1JDTEZGQlFWRXNTMEZCU3l4RFFVRkRMRTFCUVUwc1IwRkJSenRKUVVOMlFpeFJRVUZSTEV0QlFVc3NRMEZCUXl4UFFVRlBMRWRCUVVjN1NVRkRlRUlzVVVGQlVTeExRVUZMTEVOQlFVTXNWVUZCVlN4SFFVRkhPMGxCUXpOQ0xGRkJRVkVzUzBGQlN5eERRVUZETEdOQlFXTXNSMEZCUnp0SlFVTXZRaXhSUVVGUkxFdEJRVXNzUTBGQlF5eFZRVUZWTEVkQlFVYzdTVUZETTBJc1RVRkJUU3hQUVVGUExGTkJRVk1zWVVGQllTeERRVUZETzBsQlEzQkRMRXRCUVVzc1MwRkJTeXhEUVVGRExFMUJRVTBzUjBGQlJ6dEpRVU53UWl4TFFVRkxMRXRCUVVzc1EwRkJReXhMUVVGTExFZEJRVWM3U1VGRGJrSXNTMEZCU3l4SFFVRkhMRWRCUVVjc1QwRkJUeXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETzBsQlEycERMRkZCUVZFc1YwRkJWeXhEUVVGRE8wbEJSWEJDTEUxQlFVMHNWMEZCVnl4VFFVRlRMR0ZCUVdFc1EwRkJRenRKUVVONFF5eFRRVUZUTEV0QlFVc3NRMEZCUXl4UlFVRlJMRWRCUVVjN1NVRkRNVUlzVTBGQlV5eExRVUZMTEVOQlFVTXNUVUZCVFN4SFFVRkhPMGxCUTNoQ0xGTkJRVk1zVDBGQlR5eEhRVUZITzBsQlEyNUNMRk5CUVZNc1ZVRkJWU3hIUVVGSE8wbEJSWFJDTEUxQlFVMHNVVUZCVVN4VFFVRlRMR0ZCUVdFc1EwRkJRenRKUVVOeVF5eE5RVUZOTEVsQlFVa3NSMEZCUnp0SlFVTmlMRTFCUVUwc1YwRkJWeXhIUVVGSE8wbEJRM0JDTEUxQlFVMHNVMEZCVXl4SFFVRkhPMGxCUTJ4Q0xFMUJRVTBzUlVGQlJTeEhRVUZITzBsQlExZ3NVMEZCVXl4WFFVRlhMRU5CUVVNN1NVRkZja0lzVTBGQlV5eFhRVUZYTEVOQlFVTTdTVUZEY2tJc1UwRkJVeXhYUVVGWExFTkJRVU03U1VGRmNrSXNUMEZCVHp0QlFVTllPMEZCUlVFc1UwRkJVeXgzUTBGQmEwSXNWVUZCVlN4RlFVRkZMR1ZCUVdVN1NVRkRiRVFzU1VGQlNTeFpRVUZaTEZOQlFWTXNZVUZCWVN4RFFVRkRPMGxCUTNaRExGVkJRVlVzVTBGQlV5eEhRVUZITzBsQlEzUkNMRlZCUVZVc1JVRkJSU3hIUVVGSE8wbEJRMllzVlVGQlZTeExRVUZMTEVOQlFVTXNTMEZCU3l4SFFVRkhMRmRCUVZjc1YwRkJWeXhIUVVGSExFbEJRVVVzYTBKQlFXdENPMGxCUTNKRkxFOUJRVTg3UVVGRFdEdEJRVVZCTEZOQlFWTTdTVUZGVEN4VFFVRlRPMGxCUTFRc1RVRkJUU3hyUWtGQmEwSTdTVUZEZUVJc1RVRkJUU3haUVVGWk8wbEJSV3hDTzBsQlJVRXNUVUZCVFN4WlFVRlpMRTlCUVU4c1dVRkJXVHRKUVVOeVF5eEpRVUZKTzBsQlEwb3NTVUZCU1N4VlFVRlZMRWxCUVVrc1NVRkJTU3hUUVVGVE8xRkJRek5DTEdsRVFVRnBSRHRSUVVOcVJDeGxRVUZsTEZWQlFWVXNWVUZCVlN4RFFVRkRMRWRCUVVjc2NVSkJRWEZDTzFGQlF6VkVMSEZEUVVGbExFOUJRVThzV1VGQldTeEhRVUZITEZGQlFWRTdVVUZETjBNc1VVRkJVU3hIUVVGSExFTkJRVU1zYTBKQlFXdENPMGxCUTJ4RExFOUJRVTg3VVVGRFNDeDFRMEZCZFVNN1VVRkRka01zVFVGQlRTeGhRVUZoTEZOQlFWTXNjMEpCUVhOQ0xFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1JVRkJSVHRSUVVOMFJTeGxRVUZsTEZkQlFWY3NjVUpCUVhGQ08xRkJReTlETEZGQlFWRXNSMEZCUnl4RFFVRkRPMUZCUTFvc1VVRkJVU3hIUVVGSExFTkJRVU1zVDBGQlR5eFpRVUZaTzBsQlEyNURPMGxCUTBFc1VVRkJVU3hIUVVGSExFTkJRVU1zVlVGQlZUdEpRVVYwUWl4TlFVRk5MR0ZCUVdFc1UwRkJVeXh6UWtGQmMwSXNRMEZCUXl4aFFVRmhMRU5CUVVNc1JVRkJSVHRKUVVWdVJTeHpRMEZCYzBNN1NVRkRkRU1zVFVGQlRTeHJRa0ZCYTBJc2VVTkJRVzFDTEZsQlFWa3NZMEZCWXl4WFFVRlhPMGxCUTJoR0xGTkJRVk1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXp0SlFVVXhRaXhuUWtGQlowSTdTVUZEYUVJc1RVRkJUU3haUVVGWkxIZERRVUZyUWl4WlFVRlpPMGxCUTJoRUxHZENRVUZuUWl4WFFVRlhMRU5CUVVNN1NVRkZOVUlzYjBKQlFXOUNPMGxCUTNCQ0xFMUJRVTBzWVVGQllTeHpRMEZCWjBJc1dVRkJXVHRKUVVNdlF5eG5Ra0ZCWjBJc1YwRkJWeXhEUVVGRE8wbEJSVFZDTEdWQlFXVTdTVUZEWml4TlFVRk5MR0ZCUVdFc2RVTkJRV2xDTEZsQlFWa3NhVUpCUVdsQ08wbEJRMnBGTEdkQ1FVRm5RaXhYUVVGWExFTkJRVU03U1VGRk5VSXNNa0pCUVRKQ08wbEJRek5DTEZOQlFWTXNZMEZCWXl4RFFVRkRMR05CUVdNc1MwRkJTenRKUVVVelF5eHhRMEZCWlR0QlFVTnVRanRCUVVWQkxGTkJRVk1zTUVOQlFXOUNMRTlCUVU4N1NVRkRhRU1zVFVGQlRTeFJRVUZSTEUxQlFVMHNTVUZCU1N4RFFVRkRMRk5CUVZNc2MwSkJRWE5DTEVOQlFVTXNXVUZCV1N4TlFVRk5MRU5CUVVVc1EwRkJRVHRSUVVONlJTeE5RVUZOTEZsQlFWa3NSMEZCUnl4VFFVRlRMRU5CUVVNc1QwRkJUeXhEUVVGRExHMUNRVUZ0UWp0UlFVTXhSQ3hKUVVGSkxGVkJRVlVzVFVGQlRTeEhRVUZITEVkQlFVYzdXVUZEZEVJc1NVRkJTU3h0UTBGQllTeFJRVUZSTEVOQlFVTXNXVUZEZEVJc1QwRkJUenRSUVVWbU8xRkJRMEVzVDBGQlR6dEpRVU5ZTzBsQlEwRXNLMFZCUVN0Rk8wbEJReTlGTEVsQlFVa3NUVUZCVFN4TlFVRk5MRWRCUVVjc1IwRkJSenRSUVVOc1FpeExRVUZMTEVOQlFVTXNSVUZCUlN4RFFVRkRMRk5CUVZNc1IwRkJSenRSUVVOeVFpeEpRVUZKTEUxQlFVMHNUVUZCVFN4SFFVRkhMRWRCUTJZc1RVRkJUU3hMUVVGTExFTkJRVU1zUjBGQlJ5eFBRVUZQTEVOQlFVVXNRMEZCUVR0WlFVTndRaXhMUVVGTExFMUJRVTA3VVVGRFpqdEpRVVZTTzBGQlEwbzdRVUZGUVN4VFFVRlRPMGxCUTB3c1owTkJRV2RETzBsQlEyaERMRTFCUVUwc1pVRkJaU3hOUVVGTkxFbEJRVWtzUTBGQlF5eFRRVUZUTEhOQ1FVRnpRaXhEUVVGRExHRkJRV0VzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlR0SlFVTXpSaXhOUVVGTkxHTkJRV01zWVVGQllTeFBRVUZQTEVOQlFVVXNRMEZCUXl4SlFVRkpPMUZCUXpORExFbEJRVWtzUjBGQlJ5eFRRVUZUTEVsQlFVa3NWMEZEYUVJc1QwRkJUenRSUVVWWUxFMUJRVTBzV1VGQldTeEhRVUZITEZOQlFWTXNRMEZCUXl4UFFVRlBMRU5CUVVNc2JVSkJRVzFDTzFGQlF6RkVMRWxCUVVrc1ZVRkJWU3hOUVVGTkxFZEJRVWNzUjBGQlJ6dFpRVU4wUWl4SlFVRkpMRzFEUVVGaExGRkJRVkVzUTBGQlF5eGpRVUZqTEZWQlFWVXNVVUZCVVN4RFFVRkRMSEZEUVVOMlJDeFBRVUZQTzFGQlJXWTdVVUZEUVN4UFFVRlBPMGxCUTFnc1IwRkJSeXhOUVVGTkxFTkJRVU1zUTBGQlFTeEpRVUZITEVkQlFVY3NSMEZCUnp0SlFVTnVRaXhQUVVGUExGbEJRVmtzUTBGQlF5eFpRVUZaTzBGQlEzQkRPMEZCUlVFc1UwRkJVeXh0UTBGQllTeE5RVUZOTzBsQlEzaENMRWxCUVVrc2EwTkJRVms3VVVGRFdpeEpRVUZKTEU5QlFVOHNTMEZCU3l4RFFVRkRMRk5CUVZNc1RVRkJUU3hIUVVGSExIZERRVUZyUWl4TlFVRk5MRVZCUVVVN1dVRkRla1FzVFVGQlRTeFhRVUZYTEZOQlFWTXNZVUZCWVN4RFFVRkRPMWxCUTNoRExGTkJRVk1zVTBGQlV5eEhRVUZITzFsQlEzSkNMSEZEUVVGbExIRkNRVUZ4UWl4RFFVRkRMRmxCUVZrN1dVRkRha1FzZFVOQlFXbENPMWxCUTJwQ0xIZERRVUZyUWl4SlFVRkpMRU5CUVVNN1dVRkRka0lzY1VOQlFXVXNZMEZCWXp0UlFVTnFRenRSUVVOQkxFOUJRVThzUzBGQlN5eERRVUZETEZOQlFWTXNUMEZCVHl4RFFVRkRMRk5CUVZVc1MwRkJTeXhGUVVGRkxFTkJRVU03V1VGRE5VTXNkVU5CUVdsQ0xFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNSMEZCUnp0UlFVTnlRenRKUVVOS0xFOUJRVTg3VVVGRFNDeE5RVUZOTEZsQlFWa3NVMEZCVXl4alFVRmpMRU5CUVVNN1VVRkRNVU1zVlVGQlZTeFhRVUZYTEVkQlFVYzdVVUZEZUVJc1ZVRkJWU3hMUVVGTExFTkJRVU1zVDBGQlR5eEhRVUZITzFGQlF6RkNMRlZCUVZVc1MwRkJTeXhEUVVGRExFMUJRVTBzUjBGQlJ6dFJRVU42UWl4VlFVRlZMRk5CUVZNc1IwRkJSeXhWUVVGVkxGbEJRVms3VVVGRk5VTXNWVUZCVlN4VlFVRlZMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUjBGQlJ6dFJRVVZ3UXl4TlFVRk5MR0ZCUVdFc1UwRkJVeXhqUVVGakxFTkJRVU03VVVGRE0wTXNWMEZCVnl4TFFVRkxMRWRCUVVjN1NVRkRka0k3UVVGSFNqdEJRVVZCTEU5QlFVOHNUMEZCVHl4RFFVRkRMRk5CUVZNc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF5eFRRVUZUTEZGQlFWRTdTVUZGYmtRc1NVRkJTU3hSUVVGUkxGTkJRVk1zUlVGRGFrSTdTVUZIU2l4SlFVRkpMRkZCUVZFc1pVRkJaU3hGUVVOMlFpeFJRVUZSTEVkQlFVY3NRMEZCUXp0SlFVZG9RaXhKUVVGSkxGRkJRVkVzVDBGQlR5eEZRVUZGTzFGQlEycENMRkZCUVZFc1IwRkJSeXhEUVVGRExIVkNRVUYxUWl4UlFVRlJMRTlCUVU4N1VVRkRiRVFzYlVOQlFXRXNVVUZCVVN4UFFVRlBPMGxCUTJoRE8wbEJSVUVzVDBGQlR6dEJRVU5ZSWl3aWMyOTFjbU5sY3lJNld5SnpjbU12WTI5dWRHVnVkQzVxY3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SjJZWElnYzJWc1pXTjBaV1JVWlhoMElEMGdYQ0pjSWp0Y2JuWmhjaUJ0YjJSaGJGWnBjMmxpYkdVZ1BTQm1ZV3h6WlR0Y2JuWmhjaUJzWVhOMFNXNXNhVzVsVG05a1pTQTlJRzUxYkd3N1hHNTJZWElnYVc1c2FXNWxRVzV6ZDJWeVRtOWtaWE1nUFNCQmNuSmhlU2dwTzF4dVhHNTJZWElnYVc1c2FXNWxUVzlrWlR0Y2JtTm9jbTl0WlM1emRHOXlZV2RsTG5ONWJtTXVaMlYwS0Z4dUlDQWdJSHNnYVc1c2FXNWxUVzlrWlRvZ1ptRnNjMlVnZlN4Y2JpQWdJQ0FvYVhSbGJYTXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXNXNhVzVsVFc5a1pTQTlJR2wwWlcxekxtbHViR2x1WlUxdlpHVTdYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0Z3aVNXNXNhVzVsSUcxdlpHVWdjMlYwSUhSdlhDSXNJR2x1YkdsdVpVMXZaR1VwTzF4dUlDQWdJSDFjYmlrN1hHNWNibHh1Wm5WdVkzUnBiMjRnYUdsa1pVMXZaR0ZzU1daV2FYTnBZbXhsS0NrZ2UxeHVJQ0FnSUdsbUlDaHRiMlJoYkZacGMybGliR1VwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYlc5a1lXeFhjbUZ3Y0dWeVJHbDJjeUE5SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SelFubERiR0Z6YzA1aGJXVW9YQ0p0YjJSaGJGZHlZWEJ3WlhKY0lpazdYRzRnSUNBZ0lDQWdJRzF2WkdGc1YzSmhjSEJsY2tScGRuTmJNRjB1Y21WdGIzWmxLQ2s3WEc0Z0lDQWdJQ0FnSUcxdlpHRnNWbWx6YVdKc1pTQTlJR1poYkhObE8xeHVJQ0FnSUgxY2JuMWNibHh1Wm5WdVkzUnBiMjRnYUdGdVpHeGxVM1ZpYldsMEtDa2dlMXh1SUNBZ0lHbG1JQ2hwYm14cGJtVk5iMlJsS1NCN1hHNGdJQ0FnSUNBZ0lHeGhjM1JKYm14cGJtVk9iMlJsSUQwZ2MyVnNaV04wU1c1c2FXNWxUbTlrWlNncE8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCaVpXZHBiazV2WkdVZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Z3aVpHbDJYQ0lwTzF4dUlDQWdJQ0FnSUNCaVpXZHBiazV2WkdVdVkyeGhjM05PWVcxbElEMGdYQ0pqYlMxc2FXNWxYQ0k3WEc0Z0lDQWdJQ0FnSUdKbFoybHVUbTlrWlM1cGJtNWxja2hVVFV3Z1BTQmNJaVVnUW1WbmFXNGdRVWtnUjJWdVpYSmhkR1ZrSUVOdmJuUmxiblE2WENKY2JpQWdJQ0FnSUNBZ2JHRnpkRWx1YkdsdVpVNXZaR1V1YVc1elpYSjBRV1JxWVdObGJuUkZiR1Z0Wlc1MEtGd2lZV1owWlhKbGJtUmNJaXdnWW1WbmFXNU9iMlJsS1R0Y2JpQWdJQ0FnSUNBZ2JHRnpkRWx1YkdsdVpVNXZaR1VnUFNCaVpXZHBiazV2WkdVN1hHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1ptbHljM1JPYjJSbElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENoY0ltUnBkbHdpS1R0Y2JpQWdJQ0FnSUNBZ1ptbHljM1JPYjJSbExtTnNZWE56VG1GdFpTQTlJRndpWTIwdGJHbHVaVndpTzF4dUlDQWdJQ0FnSUNCc1lYTjBTVzVzYVc1bFRtOWtaUzVwYm5ObGNuUkJaR3BoWTJWdWRFVnNaVzFsYm5Rb1hDSmhablJsY21WdVpGd2lMQ0JtYVhKemRFNXZaR1VwTzF4dUlDQWdJQ0FnSUNCc1lYTjBTVzVzYVc1bFRtOWtaU0E5SUdacGNuTjBUbTlrWlR0Y2JpQWdJQ0FnSUNBZ2FXNXNhVzVsUVc1emQyVnlUbTlrWlhNZ1BTQmJabWx5YzNST2IyUmxYVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJUYUc5M0lIUm9aU0JoWTNScGIyNGdZbUZ5SUZ4dUlDQWdJQ0FnSUNCamIyNXpkQ0JoWTNScGIyNXpSR2wySUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvWENKaFkzUnBiMjV6WENJcFhHNGdJQ0FnSUNBZ0lHRmpkR2x2Ym5ORWFYWXVjM1I1YkdVdVpHbHpjR3hoZVNBOUlGd2labXhsZUZ3aU8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCdGIyUmhiRmR5WVhCd1pYSkVhWFlnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2hjSW0xdlpHRnNWM0poY0hCbGNsd2lLVHRjYmlBZ0lDQWdJQ0FnYlc5a1lXeFhjbUZ3Y0dWeVJHbDJMbk4wZVd4bExtaGxhV2RvZENBOUlGd2lOalZ3ZUZ3aU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJR2x1Y0hWMElEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb1hDSnRiMlJoYkVsdWNIVjBYQ0lwTzF4dUlDQWdJR05vY205dFpTNXlkVzUwYVcxbExuTmxibVJOWlhOellXZGxLSHRjYmlBZ0lDQWdJQ0FnYVc1d2RYUTZJR2x1Y0hWMExuWmhiSFZsTEZ4dUlDQWdJQ0FnSUNCelpXeGxZM1JwYjI0NklITmxiR1ZqZEdWa1ZHVjRkQ3hjYmlBZ0lDQWdJQ0FnYzI5MWNtTmxPaUJjSW0xdlpHRnNYQ0pjYmlBZ0lDQjlLVHRjYmx4dUlDQWdJR2xtSUNocGJteHBibVZOYjJSbEtTQjdYRzRnSUNBZ0lDQWdJR2hwWkdWTmIyUmhiRWxtVm1semFXSnNaU2dwTzF4dUlDQWdJSDFjYm4xY2JseHVaRzlqZFcxbGJuUXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpaGNJbXRsZVdSdmQyNWNJaXdnWm5WdVkzUnBiMjRvWlhabGJuUXBJSHRjYmlBZ0lDQmpiMjV6ZENCclpYa2dQU0JsZG1WdWRDNXJaWGs3WEc0Z0lDQWdhV1lnS0d0bGVTQTlQVDBnWENKRmMyTmhjR1ZjSWlrZ2UxeHVJQ0FnSUNBZ0lDQm9hV1JsVFc5a1lXeEpabFpwYzJsaWJHVW9LVHRjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLRzF2WkdGc1ZtbHphV0pzWlNrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCcGJuQjFkQ0E5SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLRndpYlc5a1lXeEpibkIxZEZ3aUtUdGNiaUFnSUNBZ0lDQWdhV1lnS0d0bGVTQTlQU0JjSWtWdWRHVnlYQ0lnSmlZZ2FXNXdkWFFnUFQwOUlHUnZZM1Z0Wlc1MExtRmpkR2wyWlVWc1pXMWxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2hoYm1Sc1pWTjFZbTFwZENncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmU2s3WEc1Y2JtWjFibU4wYVc5dUlHTnlaV0YwWlUxdlpHRnNWM0poY0hCbGNpaGpiMjUwWlc1MFJHbDJMQ0JpYjNWdVpHbHVaMUpsWTNRc0lIUnZjRTFoY21kcGJpd2diR1ZtZEZKcFoyaDBUV0Z5WjJsdUtTQjdYRzVjYmlBZ0lDQjJZWElnYlc5a1lXeFhjbUZ3Y0dWeVJHbDJJRDBnSUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9YQ0prYVhaY0lpazdYRzRnSUNBZ2JXOWtZV3hYY21Gd2NHVnlSR2wyTG1Oc1lYTnpUbUZ0WlNBOUlGd2liVzlrWVd4WGNtRndjR1Z5WENJN1hHNGdJQ0FnYlc5a1lXeFhjbUZ3Y0dWeVJHbDJMbWxrSUQwZ1hDSnRiMlJoYkZkeVlYQndaWEpjSWp0Y2JpQWdJQ0J0YjJSaGJGZHlZWEJ3WlhKRWFYWXVjM1I1YkdVdWRHOXdJRDBnWW05MWJtUnBibWRTWldOMExtSnZkSFJ2YlNBcklIUnZjRTFoY21kcGJpQXJJRndpY0hoY0lqdGNiaUFnSUNCdGIyUmhiRmR5WVhCd1pYSkVhWFl1YzNSNWJHVXViR1ZtZENBOUlHSnZkVzVrYVc1blVtVmpkQzVzWldaMElDc2diR1ZtZEZKcFoyaDBUV0Z5WjJsdUlDc2dYQ0p3ZUZ3aU8xeHVJQ0FnSUcxdlpHRnNWM0poY0hCbGNrUnBkaTV6ZEhsc1pTNTNhV1IwYUNBOUlHTnZiblJsYm5SRWFYWXViMlptYzJWMFYybGtkR2dnTFNBeUtteGxablJTYVdkb2RFMWhjbWRwYmlBcklGd2ljSGhjSWp0Y2JpQWdJQ0J0YjJSaGJGZHlZWEJ3WlhKRWFYWXVjM1I1YkdVdWFHVnBaMmgwSUQwZ1hDSTBNSEI0WENJN1hHNGdJQ0FnYlc5a1lXeFhjbUZ3Y0dWeVJHbDJMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQmNJbVpzWlhoY0lqdGNiaUFnSUNCdGIyUmhiRmR5WVhCd1pYSkVhWFl1YzNSNWJHVXVjRzl6YVhScGIyNGdQU0JjSW1GaWMyOXNkWFJsWENJN1hHNGdJQ0FnYlc5a1lXeFhjbUZ3Y0dWeVJHbDJMbk4wZVd4bExtWnNaWGhFYVhKbFkzUnBiMjRnUFNCY0ltTnZiSFZ0Ymx3aU8xeHVJQ0FnSUhKbGRIVnliaUJ0YjJSaGJGZHlZWEJ3WlhKRWFYWmNibjFjYmx4dVpuVnVZM1JwYjI0Z1kzSmxZWFJsUVdOMGFXOXVRbUZ5S0dOdmJuUmxiblJFYVhZc0lHeGxablJTYVdkb2RFMWhjbWRwYmlrZ2UxeHVJQ0FnSUhaaGNpQmhZM1JwYjI1elJHbDJJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDaGNJbVJwZGx3aUtUdGNiaUFnSUNCaFkzUnBiMjV6UkdsMkxtTnNZWE56VG1GdFpTQTlJRndpWVdOMGFXOXVjMXdpTzF4dUlDQWdJR0ZqZEdsdmJuTkVhWFl1YVdRZ1BTQmNJbUZqZEdsdmJuTmNJanRjYmlBZ0lDQmhZM1JwYjI1elJHbDJMbk4wZVd4bExuZHBaSFJvSUQwZ1kyOXVkR1Z1ZEVScGRpNXZabVp6WlhSWGFXUjBhQ0F0SURJcWJHVm1kRkpwWjJoMFRXRnlaMmx1SUNzZ1hDSndlRndpTzF4dUlDQWdJR0ZqZEdsdmJuTkVhWFl1YzNSNWJHVXVhR1ZwWjJoMElEMGdYQ0l5TUhCNFhDSTdYRzRnSUNBZ1lXTjBhVzl1YzBScGRpNXpkSGxzWlM1a2FYTndiR0Y1SUQwZ1hDSnViMjVsWENJN1hHNGdJQ0FnWVdOMGFXOXVjMFJwZGk1emRIbHNaUzVtYkdWNFJHbHlaV04wYVc5dUlEMGdYQ0p5YjNjdGNtVjJaWEp6WlZ3aU8xeHVYRzRnSUNBZ2RtRnlJSEpsY0d4aFkyVkJZM1JwYjI0Z1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NkaWRYUjBiMjRuS1R0Y2JpQWdJQ0J5WlhCc1lXTmxRV04wYVc5dUxuUmxlSFJEYjI1MFpXNTBJRDBnWENKeVpYQnNZV05sWENJN1hHNGdJQ0FnY21Wd2JHRmpaVUZqZEdsdmJpNXpkSGxzWlM1bWIyNTBVMmw2WlNBOUlGd2lNVEJ3ZUZ3aU8xeHVJQ0FnSUhKbGNHeGhZMlZCWTNScGIyNHVjM1I1YkdVdVltRmphMmR5YjNWdVpFTnZiRzl5SUQwZ1hDSjBjbUZ1YzNCaGNtVnVkRndpTzF4dUlDQWdJSEpsY0d4aFkyVkJZM1JwYjI0dWMzUjViR1V1WW05eVpHVnlJRDBnWENKdWIyNWxYQ0k3WEc0Z0lDQWdjbVZ3YkdGalpVRmpkR2x2Ymk1emRIbHNaUzV0WVhKbmFXNVNhV2RvZENBOUlGd2lNVEJ3ZUZ3aU8xeHVJQ0FnSUhKbGNHeGhZMlZCWTNScGIyNHVjM1I1YkdVdVkyOXNiM0lnUFNCY0luSm5ZbUVvTWpVMUxDQXlOVFVzSURJMU5Td2dNQzQyS1Z3aU8xeHVYRzRnSUNBZ2NtVndiR0ZqWlVGamRHbHZiaTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLRndpWTJ4cFkydGNJaXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0F2THlCSFpYUWdiM1YwY0hWMElIUmxlSFJjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdiM1YwY0hWMFZHVjRkQ0E5SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLRndpWVc1emQyVnlYQ0lwTG1sdWJtVnlTRlJOVER0Y2JpQWdJQ0FnSUNBZ2NtVndiR0ZqWlZObGJHVmpkR1ZrVkdWNGRDaHZkWFJ3ZFhSVVpYaDBLVnh1SUNBZ0lIMHBPMXh1WEc0Z0lDQWdZV04wYVc5dWMwUnBkaTVoY0hCbGJtUkRhR2xzWkNoeVpYQnNZV05sUVdOMGFXOXVLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQmhZM1JwYjI1elJHbDJPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQmpjbVZoZEdWSmJuQjFkRTF2WkdGc0tHTnZiblJsYm5SRWFYWXNJRzF2WkdGc1YzSmhjSEJsY2tScGRpd2diR1ZtZEZKcFoyaDBUV0Z5WjJsdUtTQjdYRzVjYmlBZ0lDQXZMeUJEY21WaGRHVWdZVzVrSUdGa1pDQnRiMlJoYkNCMGJ5QnRiMlJoYkNCM2NtRndjR1Z5WEc0Z0lDQWdkbUZ5SUcxdlpHRnNSR2wySUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2hjSW1ScGRsd2lLVHRjYmlBZ0lDQnRiMlJoYkVScGRpNWpiR0Z6YzA1aGJXVWdQU0JjSW0xdlpHRnNYQ0k3WEc0Z0lDQWdiVzlrWVd4RWFYWXVjM1I1YkdVdWFHVnBaMmgwSUQwZ1hDSTBNSEI0WENJN1hHNGdJQ0FnYlc5a1lXeEVhWFl1YzNSNWJHVXVkMmxrZEdnZ1BTQmpiMjUwWlc1MFJHbDJMbTltWm5ObGRGZHBaSFJvSUMwZ01pcHNaV1owVW1sbmFIUk5ZWEpuYVc0Z0lDc2dYQ0p3ZUZ3aU8xeHVJQ0FnSUcxdlpHRnNSR2wyTG5OMGVXeGxMbVJwYzNCc1lYa2dQU0JjSW1ac1pYaGNJanRjYmlBZ0lDQnRiMlJoYkVScGRpNXpkSGxzWlM1d2IzTnBkR2x2YmlBOUlGd2ljbVZzWVhScGRtVmNJanRjYmx4dUlDQWdJQzh2SUVOeVpXRjBaU0JoYm1RZ1lXUmtJRzF2WkdGc0lIUnZJRzF2WkdGc0lIZHlZWEJ3WlhKY2JpQWdJQ0IyWVhJZ2JXOWtZV3hFYVhZZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Z3aVpHbDJYQ0lwTzF4dUlDQWdJRzF2WkdGc1JHbDJMbU5zWVhOelRtRnRaU0E5SUZ3aWJXOWtZV3hjSWp0Y2JpQWdJQ0J0YjJSaGJFUnBkaTV6ZEhsc1pTNW9aV2xuYUhRZ1BTQmNJalF3Y0hoY0lqdGNiaUFnSUNCdGIyUmhiRVJwZGk1emRIbHNaUzUzYVdSMGFDQTlJR052Ym5SbGJuUkVhWFl1YjJabWMyVjBWMmxrZEdnZ0xTQXlLbXhsWm5SU2FXZG9kRTFoY21kcGJpQWdLeUJjSW5CNFhDSTdYRzRnSUNBZ2JXOWtZV3hFYVhZdWMzUjViR1V1WkdsemNHeGhlU0E5SUZ3aVpteGxlRndpTzF4dUlDQWdJRzF2WkdGc1JHbDJMbk4wZVd4bExuQnZjMmwwYVc5dUlEMGdYQ0p5Wld4aGRHbDJaVndpTzF4dUlDQWdJRzF2WkdGc1YzSmhjSEJsY2tScGRpNWhjSEJsYm1SRGFHbHNaQ2h0YjJSaGJFUnBkaWs3WEc1Y2JpQWdJQ0F2THlCQlpHUWdaV3hsYldWdWRITWdkRzhnYlc5a1lXeGNiaUFnSUNCamIyNXpkQ0JwWTI5dVJHbDJJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDaGNJbVJwZGx3aUtUdGNiaUFnSUNCcFkyOXVSR2wyTG5OMGVXeGxMbmRwWkhSb0lEMGdYQ0l6TW5CNFhDSTdYRzRnSUNBZ2FXTnZia1JwZGk1emRIbHNaUzVvWldsbmFIUWdQU0JjSWpNeWNIaGNJanRjYmlBZ0lDQnBZMjl1UkdsMkxuTjBlV3hsTG1ScGMzQnNZWGtnUFNCY0ltWnNaWGhjSWp0Y2JpQWdJQ0JwWTI5dVJHbDJMbk4wZVd4bExtRnNhV2R1U1hSbGJYTWdQU0JjSW1ObGJuUmxjbHdpTzF4dUlDQWdJR2xqYjI1RWFYWXVjM1I1YkdVdWFuVnpkR2xtZVVOdmJuUmxiblFnUFNCY0ltTmxiblJsY2x3aU8xeHVJQ0FnSUdsamIyNUVhWFl1YzNSNWJHVXViV0Z5WjJsdVRHVm1kQ0E5SUZ3aU0zQjRYQ0k3WEc0Z0lDQWdZMjl1YzNRZ2FXTnZiaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMmx0WnljcE8xeHVJQ0FnSUdsamIyNHVjM1I1YkdVdWFHVnBaMmgwSUQwZ1hDSXlNSEI0WENJN1hHNGdJQ0FnYVdOdmJpNXpkSGxzWlM1M2FXUjBhQ0E5SUZ3aU1qQndlRndpTzF4dUlDQWdJR2xqYjI0dWMzSmpJRDBnWTJoeWIyMWxMbkoxYm5ScGJXVXVaMlYwVlZKTUtGd2lhV052Ym5NdmQyRnVaQzAyTkM1d2JtZGNJaWs3WEc0Z0lDQWdhV052YmtScGRpNWhjSEJsYm1SRGFHbHNaQ2hwWTI5dUtUdGNibHh1SUNBZ0lHTnZibk4wSUdsdWNIVjBSR2wySUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2hjSW1ScGRsd2lLVHRjYmlBZ0lDQnBibkIxZEVScGRpNXpkSGxzWlM1bWJHVjRSM0p2ZHlBOUlERTdYRzRnSUNBZ2FXNXdkWFJFYVhZdWMzUjViR1V1YUdWcFoyaDBJRDBnWENJek1uQjRYQ0k3WEc0Z0lDQWdhVzV3ZFhSRWFYWXVaR2x6Y0d4aGVTQTlJRndpWm14bGVGd2lPMXh1SUNBZ0lHbHVjSFYwUkdsMkxtRnNhV2R1U1hSbGJYTWdQU0JjSW1ObGJuUmxjbHdpTzF4dUlDQWdJRnh1SUNBZ0lHTnZibk4wSUdsdWNIVjBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDaGNJbWx1Y0hWMFhDSXBPMXh1SUNBZ0lHbHVjSFYwTG5SNWNHVWdQU0JjSW5ObFlYSmphRndpTzF4dUlDQWdJR2x1Y0hWMExuQnNZV05sYUc5c1pHVnlJRDBnWENKSWIzY2dZMkZ1SUVrZ2FHVnNjRDljSWp0Y2JpQWdJQ0JwYm5CMWRDNWpiR0Z6YzA1aGJXVWdQU0JjSW0xdlpHRnNTVzV3ZFhSY0lqdGNiaUFnSUNCcGJuQjFkQzVwWkNBOUlGd2liVzlrWVd4SmJuQjFkRndpWEc0Z0lDQWdhVzV3ZFhSRWFYWXVZWEJ3Wlc1a1EyaHBiR1FvYVc1d2RYUXBPMXh1WEc0Z0lDQWdiVzlrWVd4RWFYWXVZWEJ3Wlc1a1EyaHBiR1FvYVdOdmJrUnBkaWs3WEc0Z0lDQWdiVzlrWVd4RWFYWXVZWEJ3Wlc1a1EyaHBiR1FvYVc1d2RYUkVhWFlwTzF4dVhHNGdJQ0FnY21WMGRYSnVJRzF2WkdGc1JHbDJPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQmpjbVZoZEdWQmJuTjNaWEpOYjJSaGJDaGpiMjUwWlc1MFJHbDJMQ0JzWldaMFVtbG5hSFJOWVhKbmFXNHBJSHRjYmlBZ0lDQjJZWElnWVc1emQyVnlSR2wySUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2hjSW1ScGRsd2lLVHRjYmlBZ0lDQmhibk4zWlhKRWFYWXVZMnhoYzNOT1lXMWxJRDBnWENKaGJuTjNaWEpjSWp0Y2JpQWdJQ0JoYm5OM1pYSkVhWFl1YVdRZ1BTQmNJbUZ1YzNkbGNsd2lPMXh1SUNBZ0lHRnVjM2RsY2tScGRpNXpkSGxzWlM1M2FXUjBhQ0E5SUdOdmJuUmxiblJFYVhZdWIyWm1jMlYwVjJsa2RHZ2dMU0F5S214bFpuUlNhV2RvZEUxaGNtZHBiaUFySUZ3aWNIaGNJanRjYmlBZ0lDQnlaWFIxY200Z1lXNXpkMlZ5UkdsMk8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCemFHOTNUVzlrWVd3b0tTQjdYRzVjYmlBZ0lDQXZMeUJRWVhKaGJYTmNiaUFnSUNCamIyNXpkQ0JzWldaMFVtbG5hSFJOWVhKbmFXNGdQU0F4TlR0Y2JpQWdJQ0JqYjI1emRDQjBiM0JOWVhKbmFXNGdQU0ExTzF4dVhHNGdJQ0FnYUdsa1pVMXZaR0ZzU1daV2FYTnBZbXhsS0NrN1hHNWNiaUFnSUNCamIyNXpkQ0J6Wld4bFkzUnBiMjRnUFNCM2FXNWtiM2N1WjJWMFUyVnNaV04wYVc5dUtDazdYRzRnSUNBZ2RtRnlJR0p2ZFc1a2FXNW5VbVZqZER0Y2JpQWdJQ0JwWmlBb2MyVnNaV04wYVc5dUxuUjVjR1VnUFQwZ1hDSlNZVzVuWlZ3aUtTQjdYRzRnSUNBZ0lDQWdJQzh2SUZObGJHVmpkR1ZrSUdFZ1luVnVZMmdnYjJZZ2RHVjRkQ3dnYzJodmR5QmlaV3h2ZHlCelpXeGxZM1JwYjI1Y2JpQWdJQ0FnSUNBZ1ltOTFibVJwYm1kU1pXTjBJRDBnYzJWc1pXTjBhVzl1TG1kbGRGSmhibWRsUVhRb01Da3VaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0NrN1hHNGdJQ0FnSUNBZ0lITmxiR1ZqZEdWa1ZHVjRkQ0E5SUhkcGJtUnZkeTVuWlhSVFpXeGxZM1JwYjI0b0tTNTBiMU4wY21sdVp5Z3BPMXh1SUNBZ0lDQWdJQ0JqYjI1emIyeGxMbXh2WnloY0lsTmxiR1ZqZEdWa0lIUmxlSFE2WENJc0lITmxiR1ZqZEdWa1ZHVjRkQ2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdMeThnVG04Z2MyVnNaV04wYVc5dUxDQnphRzkzSUdKbGJHOTNJR0ZqZEdsMlpTQnNhVzVsWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR0ZqZEdsMlpVeHBibVVnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MGMwSjVRMnhoYzNOT1lXMWxLRndpWTIwdFlXTjBhWFpsVEdsdVpWd2lLVnN3WFR0Y2JpQWdJQ0FnSUNBZ1ltOTFibVJwYm1kU1pXTjBJRDBnWVdOMGFYWmxUR2x1WlM1blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUW9LVHRjYmlBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb1hDSk9ieUIwWlhoMElITmxiR1ZqZEdsdmJsd2lLVHRjYmlBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb2QybHVaRzkzTG1kbGRGTmxiR1ZqZEdsdmJpZ3BLVHRjYmlBZ0lDQjlYRzRnSUNBZ1kyOXVjMjlzWlM1c2IyY29YQ0ppYjNWdVpITmNJaXdnWW05MWJtUnBibWRTWldOMEtUdGNibHh1SUNBZ0lHTnZibk4wSUdOdmJuUmxiblJFYVhZZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBjMEo1UTJ4aGMzTk9ZVzFsS0Z3aVkyMHRZMjl1ZEdWdWRGd2lLVnN3WFR0Y2JpQWdJQ0JjYmlBZ0lDQXZMeUJEY21WaGRHVWdZVzVrSUdGa1pDQnRiMlJoYkNCM2NtRndjR1Z5SUhSdklFUlBUVnh1SUNBZ0lHTnZibk4wSUcxdlpHRnNWM0poY0hCbGNrUnBkaUE5SUdOeVpXRjBaVTF2WkdGc1YzSmhjSEJsY2loamIyNTBaVzUwUkdsMkxDQmliM1Z1WkdsdVoxSmxZM1FzSUhSdmNFMWhjbWRwYml3Z2JHVm1kRkpwWjJoMFRXRnlaMmx1S1Z4dUlDQWdJR1J2WTNWdFpXNTBMbUp2WkhrdVlYQndaVzVrUTJocGJHUW9iVzlrWVd4WGNtRndjR1Z5UkdsMktUdGNibHh1SUNBZ0lDOHZJRU55WldGMFpTQmhibk4zWlhKY2JpQWdJQ0JqYjI1emRDQmhibk4zWlhKRWFYWWdQU0JqY21WaGRHVkJibk4zWlhKTmIyUmhiQ2hqYjI1MFpXNTBSR2wyTENCc1pXWjBVbWxuYUhSTllYSm5hVzRwTzF4dUlDQWdJRzF2WkdGc1YzSmhjSEJsY2tScGRpNWhjSEJsYm1SRGFHbHNaQ2hoYm5OM1pYSkVhWFlwTzF4dVhHNGdJQ0FnTHk4Z1EzSmxZWFJsSUdGamRHbHZiaUJpWVhKY2JpQWdJQ0JqYjI1emRDQmhZM1JwYjI1elJHbDJJRDBnWTNKbFlYUmxRV04wYVc5dVFtRnlLR052Ym5SbGJuUkVhWFlzSUd4bFpuUlNhV2RvZEUxaGNtZHBiaWs3SUZ4dUlDQWdJRzF2WkdGc1YzSmhjSEJsY2tScGRpNWhjSEJsYm1SRGFHbHNaQ2hoWTNScGIyNXpSR2wyS1R0Y2JseHVJQ0FnSUM4dklFTnlaV0YwWlNCcGJuQjFkRnh1SUNBZ0lHTnZibk4wSUdsdWNIVjBUVzlrWVd3Z1BTQmpjbVZoZEdWSmJuQjFkRTF2WkdGc0tHTnZiblJsYm5SRWFYWXNJRzF2WkdGc1YzSmhjSEJsY2tScGRpd2diR1ZtZEZKcFoyaDBUV0Z5WjJsdUtUdGNiaUFnSUNCdGIyUmhiRmR5WVhCd1pYSkVhWFl1WVhCd1pXNWtRMmhwYkdRb2FXNXdkWFJOYjJSaGJDazdYRzVjYmlBZ0lDQXZMeUJOWVd0bElIUm9aU0JwYm5CMWRDQjBhR1VnWm05amRYTmNiaUFnSUNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2hjSW0xdlpHRnNTVzV3ZFhSY0lpa3VabTlqZFhNb0tWeHVYRzRnSUNBZ2JXOWtZV3hXYVhOcFlteGxJRDBnZEhKMVpUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z2NtVndiR0ZqWlZObGJHVmpkR1ZrVkdWNGRDaHVaWGRVWlhoMEtTQjdYRzRnSUNBZ1kyOXVjM1FnYm05a1pYTWdQU0JCY25KaGVTNW1jbTl0S0dSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SelFubERiR0Z6YzA1aGJXVW9YQ0pqYlMxc2FXNWxYQ0lwS1M1bWFXeDBaWElvSUdWc0lEMCtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZMnhsWVc1VVpYaDBJRDBnWld3dWFXNXVaWEpJVkUxTUxuSmxjR3hoWTJVb0x6eGNYQzgvVzE0K1hTc29QbndrS1M5bkxDQmNJbHdpS1R0Y2JpQWdJQ0FnSUNBZ2FXWWdLR05zWldGdVZHVjRkQzVzWlc1bmRHZ2dQaUF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MyVnNaV04wWldSVVpYaDBMbWx1WTJ4MVpHVnpLR05zWldGdVZHVjRkQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3WEc0Z0lDQWdmU2s3WEc0Z0lDQWdMeThnVW1Wd2JHRmpaU0JqYjI1MFpXNTBJRzltSUdacGNuTjBJRzV2WkdVZ2QybDBhQ0J1WlhjZ2RHVjRkQ3dnWVc1a0lISmxiVzkyWlNCaGJHd2djM1ZpYzJWeGRXVnVkQ0J1YjJSbGMxeHVJQ0FnSUdsbUlDaHViMlJsY3k1c1pXNW5kR2dnUGlBd0tTQjdYRzRnSUNBZ0lDQWdJRzV2WkdWeld6QmRMbWx1Ym1WeVNGUk5UQ0E5SUc1bGQxUmxlSFE3WEc0Z0lDQWdJQ0FnSUdsbUlDaHViMlJsY3k1c1pXNW5kR2dnUGlBeEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdWIyUmxjeTV6YkdsalpTZ3hLUzVtYjNKRllXTm9LQ0J1YjJSbElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1YjJSbExuSmxiVzkyWlNncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNTlYRzVjYm1aMWJtTjBhVzl1SUhObGJHVmpkRWx1YkdsdVpVNXZaR1VvS1NCN1hHNGdJQ0FnTHk4Z1JtbHVaQ0J1YjJSbElHSmxiRzkzSUhObGJHVmpkR1ZrSUhSbGVIUmNiaUFnSUNCamIyNXpkQ0JqYjI1MFpXNTBUbTlrWlhNZ1BTQkJjbkpoZVM1bWNtOXRLR1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJ6UW5sRGJHRnpjMDVoYldVb1hDSmpiUzFqYjI1MFpXNTBYQ0lwV3pCZExtTm9hV3hrVG05a1pYTXBYRzRnSUNBZ1kyOXVjM1FnYkdGemRFNXZaR1ZKWkhnZ1BTQmpiMjUwWlc1MFRtOWtaWE11Wm14aGRFMWhjQ2dnS0dWc0xDQnBaSGdwSUQwK0lIdGNiaUFnSUNBZ0lDQWdhV1lnS0dWc0xtTnNZWE56VG1GdFpTQWhQU0JjSW1OdExXeHBibVZjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1kyeGxZVzVVWlhoMElEMGdaV3d1YVc1dVpYSklWRTFNTG5KbGNHeGhZMlVvTHp4Y1hDOC9XMTQrWFNzb1Bud2tLUzluTENCY0lsd2lLVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHTnNaV0Z1VkdWNGRDNXNaVzVuZEdnZ1BpQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzJWc1pXTjBaV1JVWlhoMExtbHVZMngxWkdWektHTnNaV0Z1VkdWNGRDa2dmSHdnWTJ4bFlXNVVaWGgwTG1sdVkyeDFaR1Z6S0hObGJHVmpkR1ZrVkdWNGRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhV1I0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c08xeHVJQ0FnSUgwcExtWnBiSFJsY2loNFBUNTRLUzV3YjNBb0tUdGNiaUFnSUNCeVpYUjFjbTRnWTI5dWRHVnVkRTV2WkdWelcyeGhjM1JPYjJSbFNXUjRYVHRjYm4xY2JseHVablZ1WTNScGIyNGdkWEJrWVhSbFFXNXpkMlZ5S0dGdWMzZGxjaWtnZTF4dUlDQWdJR2xtSUNocGJteHBibVZOYjJSbEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoaGJuTjNaWEl1YzNCc2FYUW9MMXhjY2o5Y1hHNHZLUzVzWlc1bmRHZ2dQaUJwYm14cGJtVkJibk4zWlhKT2IyUmxjeTVzWlc1bmRHZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUc1bGVIUk9iMlJsSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2hjSW1ScGRsd2lLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWxlSFJPYjJSbExtTnNZWE56VG1GdFpTQTlJRndpWTIwdGJHbHVaVndpTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR0Z6ZEVsdWJHbHVaVTV2WkdVdWFXNXpaWEowUVdScVlXTmxiblJGYkdWdFpXNTBLRndpWVdaMFpYSmxibVJjSWl3Z2JtVjRkRTV2WkdVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdGemRFbHViR2x1WlU1dlpHVWdQU0J1WlhoMFRtOWtaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHViR2x1WlVGdWMzZGxjazV2WkdWekxuQjFjMmdvYm1WNGRFNXZaR1VwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR0Z6ZEVsdWJHbHVaVTV2WkdVdWMyTnliMnhzU1c1MGIxWnBaWGNvS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQmhibk4zWlhJdWMzQnNhWFFvTDF4Y2NqOWNYRzR2S1M1bWIzSkZZV05vS0daMWJtTjBhVzl1SUNoMllXeDFaU3dnYVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1c2FXNWxRVzV6ZDJWeVRtOWtaWE5iYVYwdWFXNXVaWEpJVkUxTUlEMGdkbUZzZFdVN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdGdWMzZGxja1JwZGlBOUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0Z3aVlXNXpkMlZ5WENJcE8xeHVJQ0FnSUNBZ0lDQmhibk4zWlhKRWFYWXVkR1Y0ZEVOdmJuUmxiblFnUFNCaGJuTjNaWEk3WEc0Z0lDQWdJQ0FnSUdGdWMzZGxja1JwZGk1emRIbHNaUzV3WVdSa2FXNW5JRDBnWENJMWNIaGNJanRjYmlBZ0lDQWdJQ0FnWVc1emQyVnlSR2wyTG5OMGVXeGxMbWhsYVdkb2RDQTlJRndpWVhWMGIxd2lPMXh1SUNBZ0lDQWdJQ0JoYm5OM1pYSkVhWFl1YzJOeWIyeHNWRzl3SUQwZ1lXNXpkMlZ5UkdsMkxuTmpjbTlzYkVobGFXZG9kRHRjYmlBZ0lDQmNiaUFnSUNBZ0lDQWdZVzV6ZDJWeVJHbDJMbkJoY21WdWRFNXZaR1V1YzNSNWJHVXVhR1ZwWjJoMElEMGdYQ0poZFhSdlhDSTdYRzRnSUNBZ1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUcxdlpHRnNTVzV3ZFhRZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNoY0ltMXZaR0ZzU1c1d2RYUmNJaWs3WEc0Z0lDQWdJQ0FnSUcxdlpHRnNTVzV3ZFhRdWRtRnNkV1VnUFNCY0lsd2lPMXh1SUNBZ0lIMWNiaUFnSUNCY2JseHVmVnh1WEc1amFISnZiV1V1Y25WdWRHbHRaUzV2YmsxbGMzTmhaMlV1WVdSa1RHbHpkR1Z1WlhJb0tISmxjWFZsYzNRc0lITmxibVJsY2l3Z2MyVnVaRkpsYzNCdmJuTmxLU0E5UGlCN1hHNWNiaUFnSUNCcFppQW9jbVZ4ZFdWemRDNXphRzkzVFc5a1lXd3BJSHRjYmlBZ0lDQWdJQ0FnYzJodmQwMXZaR0ZzS0NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tISmxjWFZsYzNRdWFXNWpiMjFwYm1kTlpYTnpZV2RsS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LRndpU1U1RFQwMUpUa2NnVFVWVFUwRkhSVndpS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2NtVnhkV1Z6ZEM1dFpYTnpZV2RsS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LRndpWTI5dWRHVnVkQ0JuYjNRZ2JXVnpjMkZuWlZ3aUxDQnlaWEYxWlhOMExtMWxjM05oWjJVcE8xeHVJQ0FnSUNBZ0lDQjFjR1JoZEdWQmJuTjNaWElvY21WeGRXVnpkQzV0WlhOellXZGxLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2RISjFaVHRjYm4wcE95SmRMQ0p1WVcxbGN5STZXMTBzSW5abGNuTnBiMjRpT2pNc0ltWnBiR1VpT2lKamIyNTBaVzUwTGtoQlUwaGZVa1ZHWDJGaVpXVTRPV1ptTXpkak1XSTVNVFF1YW5NdWJXRndJbjA9XG4iLCJ2YXIgc2VsZWN0ZWRUZXh0ID0gXCJcIjtcbnZhciBtb2RhbFZpc2libGUgPSBmYWxzZTtcbnZhciBsYXN0SW5saW5lTm9kZSA9IG51bGw7XG52YXIgaW5saW5lQW5zd2VyTm9kZXMgPSBBcnJheSgpO1xuXG52YXIgaW5saW5lTW9kZTtcbmNocm9tZS5zdG9yYWdlLnN5bmMuZ2V0KFxuICAgIHsgaW5saW5lTW9kZTogZmFsc2UgfSxcbiAgICAoaXRlbXMpID0+IHtcbiAgICAgICAgaW5saW5lTW9kZSA9IGl0ZW1zLmlubGluZU1vZGU7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiSW5saW5lIG1vZGUgc2V0IHRvXCIsIGlubGluZU1vZGUpO1xuICAgIH1cbik7XG5cblxuZnVuY3Rpb24gaGlkZU1vZGFsSWZWaXNpYmxlKCkge1xuICAgIGlmIChtb2RhbFZpc2libGUpIHtcbiAgICAgICAgY29uc3QgbW9kYWxXcmFwcGVyRGl2cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtb2RhbFdyYXBwZXJcIik7XG4gICAgICAgIG1vZGFsV3JhcHBlckRpdnNbMF0ucmVtb3ZlKCk7XG4gICAgICAgIG1vZGFsVmlzaWJsZSA9IGZhbHNlO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlU3VibWl0KCkge1xuICAgIGlmIChpbmxpbmVNb2RlKSB7XG4gICAgICAgIGxhc3RJbmxpbmVOb2RlID0gc2VsZWN0SW5saW5lTm9kZSgpO1xuICAgICAgICBjb25zdCBiZWdpbk5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBiZWdpbk5vZGUuY2xhc3NOYW1lID0gXCJjbS1saW5lXCI7XG4gICAgICAgIGJlZ2luTm9kZS5pbm5lckhUTUwgPSBcIiUgQmVnaW4gQUkgR2VuZXJhdGVkIENvbnRlbnQ6XCJcbiAgICAgICAgbGFzdElubGluZU5vZGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJlbmRcIiwgYmVnaW5Ob2RlKTtcbiAgICAgICAgbGFzdElubGluZU5vZGUgPSBiZWdpbk5vZGU7XG5cbiAgICAgICAgY29uc3QgZmlyc3ROb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZmlyc3ROb2RlLmNsYXNzTmFtZSA9IFwiY20tbGluZVwiO1xuICAgICAgICBsYXN0SW5saW5lTm9kZS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJhZnRlcmVuZFwiLCBmaXJzdE5vZGUpO1xuICAgICAgICBsYXN0SW5saW5lTm9kZSA9IGZpcnN0Tm9kZTtcbiAgICAgICAgaW5saW5lQW5zd2VyTm9kZXMgPSBbZmlyc3ROb2RlXTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBTaG93IHRoZSBhY3Rpb24gYmFyIFxuICAgICAgICBjb25zdCBhY3Rpb25zRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhY3Rpb25zXCIpXG4gICAgICAgIGFjdGlvbnNEaXYuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgICAgICBjb25zdCBtb2RhbFdyYXBwZXJEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsV3JhcHBlclwiKTtcbiAgICAgICAgbW9kYWxXcmFwcGVyRGl2LnN0eWxlLmhlaWdodCA9IFwiNjVweFwiO1xuICAgIH1cblxuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbElucHV0XCIpO1xuICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgaW5wdXQ6IGlucHV0LnZhbHVlLFxuICAgICAgICBzZWxlY3Rpb246IHNlbGVjdGVkVGV4dCxcbiAgICAgICAgc291cmNlOiBcIm1vZGFsXCJcbiAgICB9KTtcblxuICAgIGlmIChpbmxpbmVNb2RlKSB7XG4gICAgICAgIGhpZGVNb2RhbElmVmlzaWJsZSgpO1xuICAgIH1cbn1cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBjb25zdCBrZXkgPSBldmVudC5rZXk7XG4gICAgaWYgKGtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgICBoaWRlTW9kYWxJZlZpc2libGUoKTtcbiAgICB9XG4gICAgaWYgKG1vZGFsVmlzaWJsZSkge1xuICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kYWxJbnB1dFwiKTtcbiAgICAgICAgaWYgKGtleSA9PSBcIkVudGVyXCIgJiYgaW5wdXQgPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgICAgIGhhbmRsZVN1Ym1pdCgpO1xuICAgICAgICB9XG4gICAgfVxufSk7XG5cbmZ1bmN0aW9uIGNyZWF0ZU1vZGFsV3JhcHBlcihjb250ZW50RGl2LCBib3VuZGluZ1JlY3QsIHRvcE1hcmdpbiwgbGVmdFJpZ2h0TWFyZ2luKSB7XG5cbiAgICB2YXIgbW9kYWxXcmFwcGVyRGl2ID0gIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbW9kYWxXcmFwcGVyRGl2LmNsYXNzTmFtZSA9IFwibW9kYWxXcmFwcGVyXCI7XG4gICAgbW9kYWxXcmFwcGVyRGl2LmlkID0gXCJtb2RhbFdyYXBwZXJcIjtcbiAgICBtb2RhbFdyYXBwZXJEaXYuc3R5bGUudG9wID0gYm91bmRpbmdSZWN0LmJvdHRvbSArIHRvcE1hcmdpbiArIFwicHhcIjtcbiAgICBtb2RhbFdyYXBwZXJEaXYuc3R5bGUubGVmdCA9IGJvdW5kaW5nUmVjdC5sZWZ0ICsgbGVmdFJpZ2h0TWFyZ2luICsgXCJweFwiO1xuICAgIG1vZGFsV3JhcHBlckRpdi5zdHlsZS53aWR0aCA9IGNvbnRlbnREaXYub2Zmc2V0V2lkdGggLSAyKmxlZnRSaWdodE1hcmdpbiArIFwicHhcIjtcbiAgICBtb2RhbFdyYXBwZXJEaXYuc3R5bGUuaGVpZ2h0ID0gXCI0MHB4XCI7XG4gICAgbW9kYWxXcmFwcGVyRGl2LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICBtb2RhbFdyYXBwZXJEaXYuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgbW9kYWxXcmFwcGVyRGl2LnN0eWxlLmZsZXhEaXJlY3Rpb24gPSBcImNvbHVtblwiO1xuICAgIHJldHVybiBtb2RhbFdyYXBwZXJEaXZcbn1cblxuZnVuY3Rpb24gY3JlYXRlQWN0aW9uQmFyKGNvbnRlbnREaXYsIGxlZnRSaWdodE1hcmdpbikge1xuICAgIHZhciBhY3Rpb25zRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBhY3Rpb25zRGl2LmNsYXNzTmFtZSA9IFwiYWN0aW9uc1wiO1xuICAgIGFjdGlvbnNEaXYuaWQgPSBcImFjdGlvbnNcIjtcbiAgICBhY3Rpb25zRGl2LnN0eWxlLndpZHRoID0gY29udGVudERpdi5vZmZzZXRXaWR0aCAtIDIqbGVmdFJpZ2h0TWFyZ2luICsgXCJweFwiO1xuICAgIGFjdGlvbnNEaXYuc3R5bGUuaGVpZ2h0ID0gXCIyMHB4XCI7XG4gICAgYWN0aW9uc0Rpdi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgYWN0aW9uc0Rpdi5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJyb3ctcmV2ZXJzZVwiO1xuXG4gICAgdmFyIHJlcGxhY2VBY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICByZXBsYWNlQWN0aW9uLnRleHRDb250ZW50ID0gXCJyZXBsYWNlXCI7XG4gICAgcmVwbGFjZUFjdGlvbi5zdHlsZS5mb250U2l6ZSA9IFwiMTBweFwiO1xuICAgIHJlcGxhY2VBY3Rpb24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJ0cmFuc3BhcmVudFwiO1xuICAgIHJlcGxhY2VBY3Rpb24uc3R5bGUuYm9yZGVyID0gXCJub25lXCI7XG4gICAgcmVwbGFjZUFjdGlvbi5zdHlsZS5tYXJnaW5SaWdodCA9IFwiMTBweFwiO1xuICAgIHJlcGxhY2VBY3Rpb24uc3R5bGUuY29sb3IgPSBcInJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KVwiO1xuXG4gICAgcmVwbGFjZUFjdGlvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAvLyBHZXQgb3V0cHV0IHRleHRcbiAgICAgICAgY29uc3Qgb3V0cHV0VGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYW5zd2VyXCIpLmlubmVySFRNTDtcbiAgICAgICAgcmVwbGFjZVNlbGVjdGVkVGV4dChvdXRwdXRUZXh0KVxuICAgIH0pO1xuXG4gICAgYWN0aW9uc0Rpdi5hcHBlbmRDaGlsZChyZXBsYWNlQWN0aW9uKTtcblxuICAgIHJldHVybiBhY3Rpb25zRGl2O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVJbnB1dE1vZGFsKGNvbnRlbnREaXYsIG1vZGFsV3JhcHBlckRpdiwgbGVmdFJpZ2h0TWFyZ2luKSB7XG5cbiAgICAvLyBDcmVhdGUgYW5kIGFkZCBtb2RhbCB0byBtb2RhbCB3cmFwcGVyXG4gICAgdmFyIG1vZGFsRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBtb2RhbERpdi5jbGFzc05hbWUgPSBcIm1vZGFsXCI7XG4gICAgbW9kYWxEaXYuc3R5bGUuaGVpZ2h0ID0gXCI0MHB4XCI7XG4gICAgbW9kYWxEaXYuc3R5bGUud2lkdGggPSBjb250ZW50RGl2Lm9mZnNldFdpZHRoIC0gMipsZWZ0UmlnaHRNYXJnaW4gICsgXCJweFwiO1xuICAgIG1vZGFsRGl2LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICBtb2RhbERpdi5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblxuICAgIC8vIENyZWF0ZSBhbmQgYWRkIG1vZGFsIHRvIG1vZGFsIHdyYXBwZXJcbiAgICB2YXIgbW9kYWxEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG1vZGFsRGl2LmNsYXNzTmFtZSA9IFwibW9kYWxcIjtcbiAgICBtb2RhbERpdi5zdHlsZS5oZWlnaHQgPSBcIjQwcHhcIjtcbiAgICBtb2RhbERpdi5zdHlsZS53aWR0aCA9IGNvbnRlbnREaXYub2Zmc2V0V2lkdGggLSAyKmxlZnRSaWdodE1hcmdpbiAgKyBcInB4XCI7XG4gICAgbW9kYWxEaXYuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIG1vZGFsRGl2LnN0eWxlLnBvc2l0aW9uID0gXCJyZWxhdGl2ZVwiO1xuICAgIG1vZGFsV3JhcHBlckRpdi5hcHBlbmRDaGlsZChtb2RhbERpdik7XG5cbiAgICAvLyBBZGQgZWxlbWVudHMgdG8gbW9kYWxcbiAgICBjb25zdCBpY29uRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBpY29uRGl2LnN0eWxlLndpZHRoID0gXCIzMnB4XCI7XG4gICAgaWNvbkRpdi5zdHlsZS5oZWlnaHQgPSBcIjMycHhcIjtcbiAgICBpY29uRGl2LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICBpY29uRGl2LnN0eWxlLmFsaWduSXRlbXMgPSBcImNlbnRlclwiO1xuICAgIGljb25EaXYuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSBcImNlbnRlclwiO1xuICAgIGljb25EaXYuc3R5bGUubWFyZ2luTGVmdCA9IFwiM3B4XCI7XG4gICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGljb24uc3R5bGUuaGVpZ2h0ID0gXCIyMHB4XCI7XG4gICAgaWNvbi5zdHlsZS53aWR0aCA9IFwiMjBweFwiO1xuICAgIGljb24uc3JjID0gY2hyb21lLnJ1bnRpbWUuZ2V0VVJMKFwiaWNvbnMvd2FuZC02NC5wbmdcIik7XG4gICAgaWNvbkRpdi5hcHBlbmRDaGlsZChpY29uKTtcblxuICAgIGNvbnN0IGlucHV0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBpbnB1dERpdi5zdHlsZS5mbGV4R3JvdyA9IDE7XG4gICAgaW5wdXREaXYuc3R5bGUuaGVpZ2h0ID0gXCIzMnB4XCI7XG4gICAgaW5wdXREaXYuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIGlucHV0RGl2LmFsaWduSXRlbXMgPSBcImNlbnRlclwiO1xuICAgIFxuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGlucHV0LnR5cGUgPSBcInNlYXJjaFwiO1xuICAgIGlucHV0LnBsYWNlaG9sZGVyID0gXCJIb3cgY2FuIEkgaGVscD9cIjtcbiAgICBpbnB1dC5jbGFzc05hbWUgPSBcIm1vZGFsSW5wdXRcIjtcbiAgICBpbnB1dC5pZCA9IFwibW9kYWxJbnB1dFwiXG4gICAgaW5wdXREaXYuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuXG4gICAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQoaWNvbkRpdik7XG4gICAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQoaW5wdXREaXYpO1xuXG4gICAgcmV0dXJuIG1vZGFsRGl2O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVBbnN3ZXJNb2RhbChjb250ZW50RGl2LCBsZWZ0UmlnaHRNYXJnaW4pIHtcbiAgICB2YXIgYW5zd2VyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBhbnN3ZXJEaXYuY2xhc3NOYW1lID0gXCJhbnN3ZXJcIjtcbiAgICBhbnN3ZXJEaXYuaWQgPSBcImFuc3dlclwiO1xuICAgIGFuc3dlckRpdi5zdHlsZS53aWR0aCA9IGNvbnRlbnREaXYub2Zmc2V0V2lkdGggLSAyKmxlZnRSaWdodE1hcmdpbiArIFwicHhcIjtcbiAgICByZXR1cm4gYW5zd2VyRGl2O1xufVxuXG5mdW5jdGlvbiBzaG93TW9kYWwoKSB7XG5cbiAgICAvLyBQYXJhbXNcbiAgICBjb25zdCBsZWZ0UmlnaHRNYXJnaW4gPSAxNTtcbiAgICBjb25zdCB0b3BNYXJnaW4gPSA1O1xuXG4gICAgaGlkZU1vZGFsSWZWaXNpYmxlKCk7XG5cbiAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG4gICAgdmFyIGJvdW5kaW5nUmVjdDtcbiAgICBpZiAoc2VsZWN0aW9uLnR5cGUgPT0gXCJSYW5nZVwiKSB7XG4gICAgICAgIC8vIFNlbGVjdGVkIGEgYnVuY2ggb2YgdGV4dCwgc2hvdyBiZWxvdyBzZWxlY3Rpb25cbiAgICAgICAgYm91bmRpbmdSZWN0ID0gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHNlbGVjdGVkVGV4dCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKS50b1N0cmluZygpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIlNlbGVjdGVkIHRleHQ6XCIsIHNlbGVjdGVkVGV4dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTm8gc2VsZWN0aW9uLCBzaG93IGJlbG93IGFjdGl2ZSBsaW5lXG4gICAgICAgIGNvbnN0IGFjdGl2ZUxpbmUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY20tYWN0aXZlTGluZVwiKVswXTtcbiAgICAgICAgYm91bmRpbmdSZWN0ID0gYWN0aXZlTGluZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJObyB0ZXh0IHNlbGVjdGlvblwiKTtcbiAgICAgICAgY29uc29sZS5sb2cod2luZG93LmdldFNlbGVjdGlvbigpKTtcbiAgICB9XG4gICAgY29uc29sZS5sb2coXCJib3VuZHNcIiwgYm91bmRpbmdSZWN0KTtcblxuICAgIGNvbnN0IGNvbnRlbnREaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY20tY29udGVudFwiKVswXTtcbiAgICBcbiAgICAvLyBDcmVhdGUgYW5kIGFkZCBtb2RhbCB3cmFwcGVyIHRvIERPTVxuICAgIGNvbnN0IG1vZGFsV3JhcHBlckRpdiA9IGNyZWF0ZU1vZGFsV3JhcHBlcihjb250ZW50RGl2LCBib3VuZGluZ1JlY3QsIHRvcE1hcmdpbiwgbGVmdFJpZ2h0TWFyZ2luKVxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobW9kYWxXcmFwcGVyRGl2KTtcblxuICAgIC8vIENyZWF0ZSBhbnN3ZXJcbiAgICBjb25zdCBhbnN3ZXJEaXYgPSBjcmVhdGVBbnN3ZXJNb2RhbChjb250ZW50RGl2LCBsZWZ0UmlnaHRNYXJnaW4pO1xuICAgIG1vZGFsV3JhcHBlckRpdi5hcHBlbmRDaGlsZChhbnN3ZXJEaXYpO1xuXG4gICAgLy8gQ3JlYXRlIGFjdGlvbiBiYXJcbiAgICBjb25zdCBhY3Rpb25zRGl2ID0gY3JlYXRlQWN0aW9uQmFyKGNvbnRlbnREaXYsIGxlZnRSaWdodE1hcmdpbik7IFxuICAgIG1vZGFsV3JhcHBlckRpdi5hcHBlbmRDaGlsZChhY3Rpb25zRGl2KTtcblxuICAgIC8vIENyZWF0ZSBpbnB1dFxuICAgIGNvbnN0IGlucHV0TW9kYWwgPSBjcmVhdGVJbnB1dE1vZGFsKGNvbnRlbnREaXYsIG1vZGFsV3JhcHBlckRpdiwgbGVmdFJpZ2h0TWFyZ2luKTtcbiAgICBtb2RhbFdyYXBwZXJEaXYuYXBwZW5kQ2hpbGQoaW5wdXRNb2RhbCk7XG5cbiAgICAvLyBNYWtlIHRoZSBpbnB1dCB0aGUgZm9jdXNcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsSW5wdXRcIikuZm9jdXMoKVxuXG4gICAgbW9kYWxWaXNpYmxlID0gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZVNlbGVjdGVkVGV4dChuZXdUZXh0KSB7XG4gICAgY29uc3Qgbm9kZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjbS1saW5lXCIpKS5maWx0ZXIoIGVsID0+IHtcbiAgICAgICAgY29uc3QgY2xlYW5UZXh0ID0gZWwuaW5uZXJIVE1MLnJlcGxhY2UoLzxcXC8/W14+XSsoPnwkKS9nLCBcIlwiKTtcbiAgICAgICAgaWYgKGNsZWFuVGV4dC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRUZXh0LmluY2x1ZGVzKGNsZWFuVGV4dCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG4gICAgLy8gUmVwbGFjZSBjb250ZW50IG9mIGZpcnN0IG5vZGUgd2l0aCBuZXcgdGV4dCwgYW5kIHJlbW92ZSBhbGwgc3Vic2VxdWVudCBub2Rlc1xuICAgIGlmIChub2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG5vZGVzWzBdLmlubmVySFRNTCA9IG5ld1RleHQ7XG4gICAgICAgIGlmIChub2Rlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICBub2Rlcy5zbGljZSgxKS5mb3JFYWNoKCBub2RlID0+IHtcbiAgICAgICAgICAgICAgICBub2RlLnJlbW92ZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNlbGVjdElubGluZU5vZGUoKSB7XG4gICAgLy8gRmluZCBub2RlIGJlbG93IHNlbGVjdGVkIHRleHRcbiAgICBjb25zdCBjb250ZW50Tm9kZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjbS1jb250ZW50XCIpWzBdLmNoaWxkTm9kZXMpXG4gICAgY29uc3QgbGFzdE5vZGVJZHggPSBjb250ZW50Tm9kZXMuZmxhdE1hcCggKGVsLCBpZHgpID0+IHtcbiAgICAgICAgaWYgKGVsLmNsYXNzTmFtZSAhPSBcImNtLWxpbmVcIikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2xlYW5UZXh0ID0gZWwuaW5uZXJIVE1MLnJlcGxhY2UoLzxcXC8/W14+XSsoPnwkKS9nLCBcIlwiKTtcbiAgICAgICAgaWYgKGNsZWFuVGV4dC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRUZXh0LmluY2x1ZGVzKGNsZWFuVGV4dCkgfHwgY2xlYW5UZXh0LmluY2x1ZGVzKHNlbGVjdGVkVGV4dCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaWR4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0pLmZpbHRlcih4PT54KS5wb3AoKTtcbiAgICByZXR1cm4gY29udGVudE5vZGVzW2xhc3ROb2RlSWR4XTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlQW5zd2VyKGFuc3dlcikge1xuICAgIGlmIChpbmxpbmVNb2RlKSB7XG4gICAgICAgIGlmIChhbnN3ZXIuc3BsaXQoL1xccj9cXG4vKS5sZW5ndGggPiBpbmxpbmVBbnN3ZXJOb2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHROb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIG5leHROb2RlLmNsYXNzTmFtZSA9IFwiY20tbGluZVwiO1xuICAgICAgICAgICAgbGFzdElubGluZU5vZGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJlbmRcIiwgbmV4dE5vZGUpO1xuICAgICAgICAgICAgbGFzdElubGluZU5vZGUgPSBuZXh0Tm9kZTtcbiAgICAgICAgICAgIGlubGluZUFuc3dlck5vZGVzLnB1c2gobmV4dE5vZGUpO1xuICAgICAgICAgICAgbGFzdElubGluZU5vZGUuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgICAgfVxuICAgICAgICBhbnN3ZXIuc3BsaXQoL1xccj9cXG4vKS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwgaSkge1xuICAgICAgICAgICAgaW5saW5lQW5zd2VyTm9kZXNbaV0uaW5uZXJIVE1MID0gdmFsdWU7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGFuc3dlckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYW5zd2VyXCIpO1xuICAgICAgICBhbnN3ZXJEaXYudGV4dENvbnRlbnQgPSBhbnN3ZXI7XG4gICAgICAgIGFuc3dlckRpdi5zdHlsZS5wYWRkaW5nID0gXCI1cHhcIjtcbiAgICAgICAgYW5zd2VyRGl2LnN0eWxlLmhlaWdodCA9IFwiYXV0b1wiO1xuICAgICAgICBhbnN3ZXJEaXYuc2Nyb2xsVG9wID0gYW5zd2VyRGl2LnNjcm9sbEhlaWdodDtcbiAgICBcbiAgICAgICAgYW5zd2VyRGl2LnBhcmVudE5vZGUuc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCI7XG4gICAgXG4gICAgICAgIGNvbnN0IG1vZGFsSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsSW5wdXRcIik7XG4gICAgICAgIG1vZGFsSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgIH1cbiAgICBcblxufVxuXG5jaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoKHJlcXVlc3QsIHNlbmRlciwgc2VuZFJlc3BvbnNlKSA9PiB7XG5cbiAgICBpZiAocmVxdWVzdC5zaG93TW9kYWwpIHtcbiAgICAgICAgc2hvd01vZGFsKCk7XG4gICAgfVxuXG4gICAgaWYgKHJlcXVlc3QuaW5jb21pbmdNZXNzYWdlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiSU5DT01JTkcgTUVTU0FHRVwiKTtcbiAgICB9XG5cbiAgICBpZiAocmVxdWVzdC5tZXNzYWdlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiY29udGVudCBnb3QgbWVzc2FnZVwiLCByZXF1ZXN0Lm1lc3NhZ2UpO1xuICAgICAgICB1cGRhdGVBbnN3ZXIocmVxdWVzdC5tZXNzYWdlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbn0pOyJdLCJuYW1lcyI6WyIkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaW5saW5lTW9kZSIsIiRhZTc2MWI2ZDRiMWJiYmRhJHZhciRzZWxlY3RlZFRleHQiLCIkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkbW9kYWxWaXNpYmxlIiwiJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGxhc3RJbmxpbmVOb2RlIiwiJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGlubGluZUFuc3dlck5vZGVzIiwiQXJyYXkiLCIkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkaGlkZU1vZGFsSWZWaXNpYmxlIiwibW9kYWxXcmFwcGVyRGl2cyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInJlbW92ZSIsImNocm9tZSIsInN0b3JhZ2UiLCJzeW5jIiwiZ2V0IiwiaW5saW5lTW9kZSIsIml0ZW1zIiwiY29uc29sZSIsImxvZyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImtleSIsImlucHV0IiwiZ2V0RWxlbWVudEJ5SWQiLCJhY3RpdmVFbGVtZW50IiwiJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGhhbmRsZVN1Ym1pdCIsIiRhZTc2MWI2ZDRiMWJiYmRhJHZhciRzZWxlY3RJbmxpbmVOb2RlIiwiY29udGVudE5vZGVzIiwiZnJvbSIsImNoaWxkTm9kZXMiLCJsYXN0Tm9kZUlkeCIsImZsYXRNYXAiLCJlbCIsImlkeCIsImNsYXNzTmFtZSIsImNsZWFuVGV4dCIsImlubmVySFRNTCIsInJlcGxhY2UiLCJsZW5ndGgiLCJpbmNsdWRlcyIsImZpbHRlciIsIngiLCJwb3AiLCJiZWdpbk5vZGUiLCJjcmVhdGVFbGVtZW50IiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiZmlyc3ROb2RlIiwiYWN0aW9uc0RpdiIsInN0eWxlIiwiZGlzcGxheSIsIm1vZGFsV3JhcHBlckRpdiIsImhlaWdodCIsInJ1bnRpbWUiLCJzZW5kTWVzc2FnZSIsInZhbHVlIiwic2VsZWN0aW9uIiwic291cmNlIiwib25NZXNzYWdlIiwiYWRkTGlzdGVuZXIiLCJyZXF1ZXN0Iiwic2VuZGVyIiwic2VuZFJlc3BvbnNlIiwic2hvd01vZGFsIiwiJGFlNzYxYjZkNGIxYmJiZGEkdmFyJHNob3dNb2RhbCIsImJvdW5kaW5nUmVjdCIsImFuc3dlckRpdiIsInJlcGxhY2VBY3Rpb24iLCJ3aW5kb3ciLCJnZXRTZWxlY3Rpb24iLCJ0eXBlIiwiZ2V0UmFuZ2VBdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvU3RyaW5nIiwiYWN0aXZlTGluZSIsImNvbnRlbnREaXYiLCJpZCIsInRvcCIsImJvdHRvbSIsImxlZnQiLCJ3aWR0aCIsIm9mZnNldFdpZHRoIiwicG9zaXRpb24iLCJmbGV4RGlyZWN0aW9uIiwiYm9keSIsImFwcGVuZENoaWxkIiwidGV4dENvbnRlbnQiLCJmb250U2l6ZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlciIsIm1hcmdpblJpZ2h0IiwiY29sb3IiLCIkYWU3NjFiNmQ0YjFiYmJkYSR2YXIkcmVwbGFjZVNlbGVjdGVkVGV4dCIsIm5ld1RleHQiLCJub2RlcyIsInNsaWNlIiwiZm9yRWFjaCIsIm5vZGUiLCJpbnB1dE1vZGFsIiwiJGFlNzYxYjZkNGIxYmJiZGEkdmFyJGNyZWF0ZUlucHV0TW9kYWwiLCJsZWZ0UmlnaHRNYXJnaW4iLCJtb2RhbERpdiIsImljb25EaXYiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJtYXJnaW5MZWZ0IiwiaWNvbiIsInNyYyIsImdldFVSTCIsImlucHV0RGl2IiwiZmxleEdyb3ciLCJwbGFjZWhvbGRlciIsImZvY3VzIiwiaW5jb21pbmdNZXNzYWdlIiwibWVzc2FnZSIsIiRhZTc2MWI2ZDRiMWJiYmRhJHZhciR1cGRhdGVBbnN3ZXIiLCJhbnN3ZXIiLCJzcGxpdCIsIm5leHROb2RlIiwicHVzaCIsInNjcm9sbEludG9WaWV3IiwiaSIsInBhZGRpbmciLCJzY3JvbGxUb3AiLCJzY3JvbGxIZWlnaHQiLCJwYXJlbnROb2RlIiwibW9kYWxJbnB1dCJdLCJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5IQVNIX1JFRl9hYmVlODlmZjM3YzFiOTE0LmpzLm1hcCJ9
